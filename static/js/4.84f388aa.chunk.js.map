{"version":3,"sources":["components/ContactList/ContactList.module.css","components/ContactList/transition.module.css","components/Filter/Filter.module.scss","components/ContactForm/ContactForm.js","components/ContactItem/ContactItem.js","redux/filter/filter-selector.js","redux/contacts/contacts-selector.js","components/ContactList/ContactList.js","components/Filter/Filter.js","views/ContactsView/ContactsView.js","components/ContactForm/ContactForm.module.scss","components/ContactItem/ContactItem.module.scss"],"names":["module","exports","ContactForm","changeContactsState","useState","name","setName","phone","setPhone","handleChange","evt","target","value","className","styles","form","onSubmit","preventDefault","action","label","htmlFor","form__field","type","id","pattern","title","placeholder","onChange","required","name__label","number__label","submit__btn","ContactItem","contact","dispatch","useDispatch","autoClose","contact__item","contact__text","delete__btn","onClick","deleteContact","toast","warn","theme","onDeleteClick","getFilterVal","state","contacts","filter","getContacts","items","findContactsByQuery","nameToFilter","toLowerCase","includes","ContactList","useSelector","TransitionGroup","component","list","map","CSSTransition","in","length","timeout","classNames","transitionStyles","unmountOnExit","Filter","filterVal","filter__title","filter__field","updateFilter","ContactsView","find","info","addContact","success"],"mappings":"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","file":"static/js/4.84f388aa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2T7aG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"transition_enter__2r5x1\",\"enterActive\":\"transition_enterActive__2v0qq\",\"exit\":\"transition_exit__yK9o3\",\"exitActive\":\"transition_exitActive__R_I7Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1q5kM\",\"filter__field\":\"Filter_filter__field__3oXyg\",\"filter__title\":\"Filter_filter__title__2P7rV\"};","import styles from './ContactForm.module.scss';\nimport { PropTypes } from 'prop-types';\nimport { useState } from 'react';\n\nfunction ContactForm({ changeContactsState }) {\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n\n  const resetForm = () => {\n    setName('');\n    setPhone('');\n  };\n\n  // const dispatch = useDispatch();\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    const contact = {\n      name,\n      phone,\n    };\n\n    changeContactsState(contact);\n    resetForm();\n  };\n\n  const handleChange = evt => {\n    const { name, value } = evt.target;\n\n    if (name === 'name') {\n      setName(value);\n    }\n    if (name === 'phone') {\n      setPhone(value);\n    }\n  };\n\n  return (\n    <form className={styles.form} onSubmit={handleSubmit} action=\"#\">\n      <label className={styles.label} htmlFor=\"name\">\n        <input\n          className={styles.form__field}\n          type=\"text\"\n          id=\"name\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          placeholder=\" \"\n          value={name}\n          onChange={handleChange}\n          required\n        />\n        <span className={styles.name__label}>Name</span>\n      </label>\n\n      <label className={styles.label} htmlFor=\"number\">\n        <input\n          className={styles.form__field}\n          type=\"tel\"\n          id=\"number\"\n          name=\"phone\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          placeholder=\" \"\n          value={phone}\n          onChange={handleChange}\n          required\n        />\n        <span className={styles.number__label}>Number</span>\n      </label>\n      <button className={styles.submit__btn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nContactForm.propTypes = { changeContactsState: PropTypes.func.isRequired };\n\nexport default ContactForm;\n\nContactForm.propTypes = {\n  changeContactsState: PropTypes.func.isRequired,\n};\n","import { PropTypes } from 'prop-types';\nimport styles from './ContactItem.module.scss';\n\nimport { deleteContact } from 'redux/contacts/contacts-operations';\nimport { useDispatch } from 'react-redux';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport default function ContactItem({ contact }) {\n  const { name, phone, id } = contact;\n\n  const dispatch = useDispatch();\n\n  const onDeleteClick = id => {\n    dispatch(deleteContact(id));\n    toast.warn('The contact was succesfully deleted', { theme: 'colored' });\n  };\n  return (\n    <>\n      <ToastContainer autoClose={2000} />\n      <li key={id} className={styles.contact__item}>\n        <span className={styles.contact__text}>\n          {name}: {phone}\n        </span>\n        <button\n          className={styles.delete__btn}\n          onClick={() => onDeleteClick(id)}\n        >\n          Delete\n        </button>\n      </li>\n    </>\n  );\n}\n\nContactItem.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    phone: PropTypes.string.isRequired,\n  }),\n};\n","export const getFilterVal = state => state.contacts.filter;\n","import { getFilterVal } from 'redux/filter/filter-selector';\n\nexport const getContacts = state => state.contacts.items;\nexport const contactsLoading = state => state.contacts.loading;\n// console.log(contactsLoading());\nexport const findContactsByQuery = state => {\n  const contacts = getContacts(state);\n  const nameToFilter = getFilterVal(state);\n\n  return contacts.filter(\n    ({ name, phone }) =>\n      name.toLowerCase().includes(nameToFilter.toLowerCase()) ||\n      phone.includes(nameToFilter)\n  );\n};\n","import ContactItem from '../ContactItem/ContactItem';\nimport styles from './ContactList.module.css';\nimport transitionStyles from './transition.module.css';\n\nimport { useSelector } from 'react-redux';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\n\nimport { findContactsByQuery } from 'redux/contacts/contacts-selector';\n// import { defaultContacts } from 'redux/contacts/contacts-selector';\n\nexport default function ContactList() {\n  const contacts = useSelector(findContactsByQuery);\n\n  // const defContacts = useSelector(defaultContacts);\n  // const onDeleteClick = id => dispatch(deleteContact(id));\n\n  return (\n    <TransitionGroup component=\"ul\" className={styles.list}>\n      {contacts.map(contact => (\n        <CSSTransition\n          in={contacts.length > 0}\n          key={contact.id}\n          timeout={250}\n          classNames={transitionStyles}\n          unmountOnExit\n        >\n          <ContactItem key={contact.name} contact={contact} />\n        </CSSTransition>\n      ))}\n    </TransitionGroup>\n  );\n}\n","import styles from './Filter.module.scss';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilterVal } from 'redux/filter/filter-selector';\nimport { updateFilter } from 'redux/filter/filter-actions';\n\nexport default function Filter() {\n  const filterVal = useSelector(getFilterVal);\n  const dispatch = useDispatch();\n\n  const handleChange = ({ target: { value } }) => dispatch(updateFilter(value));\n\n  return (\n    <>\n      <div className={styles.filter}>\n        <p className={styles.filter__title}>Find contacts by name</p>\n        <input\n          className={styles.filter__field}\n          type=\"text\"\n          name=\"name\"\n          value={filterVal}\n          placeholder=\"Enter the name...\"\n          onChange={handleChange}\n        />\n      </div>\n    </>\n  );\n}\n","import ContactForm from '../../components/ContactForm/ContactForm';\nimport ContactList from '../../components/ContactList/ContactList';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport Filter from '../../components/Filter/Filter';\nimport { getContacts } from 'redux/contacts/contacts-selector';\nimport { addContact } from 'redux/contacts/contacts-operations';\n// import s from './ContactsView.module.scss';\n\nexport default function ContactsView() {\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const updateContacts = ({ name, phone }) => {\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      return toast.info('The contact with the same name already exists!', {\n        theme: 'colored',\n      });\n    } else {\n      dispatch(addContact({ name, phone }));\n      toast.success('New contact was added!', { theme: 'colored' });\n    }\n  };\n  return (\n    <>\n      <ToastContainer autoClose={2000} />\n      <h1 className=\"visually_hidden\">This is contacts page.</h1>\n\n      <ContactForm changeContactsState={updateContacts} />\n      <Filter />\n      <ContactList />\n    </>\n  );\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1NiH1\",\"submit__btn\":\"ContactForm_submit__btn__eF7FL\",\"name__label\":\"ContactForm_name__label__Ygtj5\",\"number__label\":\"ContactForm_number__label__2UXJd\",\"form__field\":\"ContactForm_form__field__3Q27b\",\"label\":\"ContactForm_label__3KgVy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact__item\":\"ContactItem_contact__item__16XEi\",\"contact__text\":\"ContactItem_contact__text__b5cWT\",\"delete__btn\":\"ContactItem_delete__btn__IVdMd\"};"],"sourceRoot":""}