{"version":3,"sources":["components/ContactList/transition.module.css","components/Filter/Filter.module.scss","components/ContactForm/ContactForm.js","components/ContactItem/ContactItem.js","../node_modules/react-transition-group/esm/utils/ChildMapping.js","../node_modules/react-transition-group/esm/TransitionGroup.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","redux/filter/filter-selector.js","redux/contacts/contacts-selector.js","components/ContactList/ContactList.js","components/Filter/Filter.js","views/ContactsView/ContactsView.js","components/ContactForm/ContactForm.module.scss","components/ContactItem/ContactItem.module.scss","components/ContactList/ContactList.module.css"],"names":["module","exports","ContactForm","changeContactsState","useState","name","setName","phone","setPhone","handleChange","evt","target","value","className","styles","form","onSubmit","preventDefault","action","label","htmlFor","form__field","type","id","pattern","title","placeholder","onChange","required","name__label","number__label","submit__btn","ContactItem","contact","dispatch","useDispatch","autoClose","contact__item","contact__text","delete__btn","onClick","deleteContact","toast","warn","theme","onDeleteClick","getChildMapping","children","mapFn","result","Object","create","Children","map","c","forEach","child","key","isValidElement","mapper","getProp","prop","props","getNextChildMapping","nextProps","prevChildMapping","onExited","nextChildMapping","prev","next","getValueForKey","i","nextKeysPending","pendingKeys","prevKey","length","push","childMapping","nextKey","pendingNextKey","mergeChildMappings","keys","hasPrev","hasNext","prevChild","isLeaving","in","cloneElement","bind","exit","enter","values","obj","k","TransitionGroup","_React$Component","context","_this","handleExited","call","this","self","ReferenceError","_assertThisInitialized","state","contextValue","isMounting","firstRender","_inheritsLoose","_proto","prototype","componentDidMount","mounted","setState","componentWillUnmount","getDerivedStateFromProps","_ref","appear","node","currentChildMapping","_extends","render","_this$props","Component","component","childFactory","_objectWithoutPropertiesLoose","React","createElement","TransitionGroupContext","Provider","propTypes","defaultProps","getFilterVal","contacts","filter","getContacts","items","findContactsByQuery","nameToFilter","toLowerCase","includes","ContactList","useSelector","list","CSSTransition","timeout","classNames","transitionStyles","unmountOnExit","Filter","filterVal","filter__title","filter__field","updateFilter","ContactsView","find","info","addContact","success"],"mappings":"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","file":"static/js/5.605c6bd5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"transition_enter__2r5x1\",\"enterActive\":\"transition_enterActive__2v0qq\",\"exit\":\"transition_exit__yK9o3\",\"exitActive\":\"transition_exitActive__R_I7Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1q5kM\",\"filter__field\":\"Filter_filter__field__3oXyg\",\"filter__title\":\"Filter_filter__title__2P7rV\"};","import styles from './ContactForm.module.scss';\nimport { PropTypes } from 'prop-types';\nimport { useState } from 'react';\n\nfunction ContactForm({ changeContactsState }) {\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n\n  const resetForm = () => {\n    setName('');\n    setPhone('');\n  };\n\n  // const dispatch = useDispatch();\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    const contact = {\n      name,\n      phone,\n    };\n\n    changeContactsState(contact);\n    resetForm();\n  };\n\n  const handleChange = evt => {\n    const { name, value } = evt.target;\n\n    if (name === 'name') {\n      setName(value);\n    }\n    if (name === 'phone') {\n      setPhone(value);\n    }\n  };\n\n  return (\n    <form className={styles.form} onSubmit={handleSubmit} action=\"#\">\n      <label className={styles.label} htmlFor=\"name\">\n        <input\n          className={styles.form__field}\n          type=\"text\"\n          id=\"name\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          placeholder=\" \"\n          value={name}\n          onChange={handleChange}\n          required\n        />\n        <span className={styles.name__label}>Name</span>\n      </label>\n\n      <label className={styles.label} htmlFor=\"number\">\n        <input\n          className={styles.form__field}\n          type=\"tel\"\n          id=\"number\"\n          name=\"phone\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          placeholder=\" \"\n          value={phone}\n          onChange={handleChange}\n          required\n        />\n        <span className={styles.number__label}>Number</span>\n      </label>\n      <button className={styles.submit__btn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nContactForm.propTypes = { changeContactsState: PropTypes.func.isRequired };\n\nexport default ContactForm;\n\nContactForm.propTypes = {\n  changeContactsState: PropTypes.func.isRequired,\n};\n","import { PropTypes } from 'prop-types';\nimport styles from './ContactItem.module.scss';\n\nimport { deleteContact } from 'redux/contacts/contacts-operations';\nimport { useDispatch } from 'react-redux';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport default function ContactItem({ contact }) {\n  const { name, phone, id } = contact;\n\n  const dispatch = useDispatch();\n\n  const onDeleteClick = id => {\n    dispatch(deleteContact(id));\n    toast.warn('The contact was succesfully deleted', { theme: 'colored' });\n  };\n  return (\n    <>\n      <ToastContainer autoClose={2000} />\n      <li key={id} className={styles.contact__item}>\n        <span className={styles.contact__text}>\n          {name}: {phone}\n        </span>\n        <button\n          className={styles.delete__btn}\n          onClick={() => onDeleteClick(id)}\n        >\n          Delete\n        </button>\n      </li>\n    </>\n  );\n}\n\nContactItem.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    phone: PropTypes.string.isRequired,\n  }),\n};\n","import { Children, cloneElement, isValidElement } from 'react';\n/**\n * Given `this.props.children`, return an object mapping key to child.\n *\n * @param {*} children `this.props.children`\n * @return {object} Mapping of key to child\n */\n\nexport function getChildMapping(children, mapFn) {\n  var mapper = function mapper(child) {\n    return mapFn && isValidElement(child) ? mapFn(child) : child;\n  };\n\n  var result = Object.create(null);\n  if (children) Children.map(children, function (c) {\n    return c;\n  }).forEach(function (child) {\n    // run the map function here instead so that the key is the computed one\n    result[child.key] = mapper(child);\n  });\n  return result;\n}\n/**\n * When you're adding or removing children some may be added or removed in the\n * same render pass. We want to show *both* since we want to simultaneously\n * animate elements in and out. This function takes a previous set of keys\n * and a new set of keys and merges them with its best guess of the correct\n * ordering. In the future we may expose some of the utilities in\n * ReactMultiChild to make this easy, but for now React itself does not\n * directly have this concept of the union of prevChildren and nextChildren\n * so we implement it here.\n *\n * @param {object} prev prev children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @param {object} next next children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @return {object} a key set that contains all keys in `prev` and all keys\n * in `next` in a reasonable order.\n */\n\nexport function mergeChildMappings(prev, next) {\n  prev = prev || {};\n  next = next || {};\n\n  function getValueForKey(key) {\n    return key in next ? next[key] : prev[key];\n  } // For each key of `next`, the list of keys to insert before that key in\n  // the combined list\n\n\n  var nextKeysPending = Object.create(null);\n  var pendingKeys = [];\n\n  for (var prevKey in prev) {\n    if (prevKey in next) {\n      if (pendingKeys.length) {\n        nextKeysPending[prevKey] = pendingKeys;\n        pendingKeys = [];\n      }\n    } else {\n      pendingKeys.push(prevKey);\n    }\n  }\n\n  var i;\n  var childMapping = {};\n\n  for (var nextKey in next) {\n    if (nextKeysPending[nextKey]) {\n      for (i = 0; i < nextKeysPending[nextKey].length; i++) {\n        var pendingNextKey = nextKeysPending[nextKey][i];\n        childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);\n      }\n    }\n\n    childMapping[nextKey] = getValueForKey(nextKey);\n  } // Finally, add the keys which didn't appear before any key in `next`\n\n\n  for (i = 0; i < pendingKeys.length; i++) {\n    childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);\n  }\n\n  return childMapping;\n}\n\nfunction getProp(child, prop, props) {\n  return props[prop] != null ? props[prop] : child.props[prop];\n}\n\nexport function getInitialChildMapping(props, onExited) {\n  return getChildMapping(props.children, function (child) {\n    return cloneElement(child, {\n      onExited: onExited.bind(null, child),\n      in: true,\n      appear: getProp(child, 'appear', props),\n      enter: getProp(child, 'enter', props),\n      exit: getProp(child, 'exit', props)\n    });\n  });\n}\nexport function getNextChildMapping(nextProps, prevChildMapping, onExited) {\n  var nextChildMapping = getChildMapping(nextProps.children);\n  var children = mergeChildMappings(prevChildMapping, nextChildMapping);\n  Object.keys(children).forEach(function (key) {\n    var child = children[key];\n    if (!isValidElement(child)) return;\n    var hasPrev = (key in prevChildMapping);\n    var hasNext = (key in nextChildMapping);\n    var prevChild = prevChildMapping[key];\n    var isLeaving = isValidElement(prevChild) && !prevChild.props.in; // item is new (entering)\n\n    if (hasNext && (!hasPrev || isLeaving)) {\n      // console.log('entering', key)\n      children[key] = cloneElement(child, {\n        onExited: onExited.bind(null, child),\n        in: true,\n        exit: getProp(child, 'exit', nextProps),\n        enter: getProp(child, 'enter', nextProps)\n      });\n    } else if (!hasNext && hasPrev && !isLeaving) {\n      // item is old (exiting)\n      // console.log('leaving', key)\n      children[key] = cloneElement(child, {\n        in: false\n      });\n    } else if (hasNext && hasPrev && isValidElement(prevChild)) {\n      // item hasn't changed transition states\n      // copy over the last transition props;\n      // console.log('unchanged', key)\n      children[key] = cloneElement(child, {\n        onExited: onExited.bind(null, child),\n        in: prevChild.props.in,\n        exit: getProp(child, 'exit', nextProps),\n        enter: getProp(child, 'enter', nextProps)\n      });\n    }\n  });\n  return children;\n}","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport TransitionGroupContext from './TransitionGroupContext';\nimport { getChildMapping, getInitialChildMapping, getNextChildMapping } from './utils/ChildMapping';\n\nvar values = Object.values || function (obj) {\n  return Object.keys(obj).map(function (k) {\n    return obj[k];\n  });\n};\n\nvar defaultProps = {\n  component: 'div',\n  childFactory: function childFactory(child) {\n    return child;\n  }\n};\n/**\n * The `<TransitionGroup>` component manages a set of transition components\n * (`<Transition>` and `<CSSTransition>`) in a list. Like with the transition\n * components, `<TransitionGroup>` is a state machine for managing the mounting\n * and unmounting of components over time.\n *\n * Consider the example below. As items are removed or added to the TodoList the\n * `in` prop is toggled automatically by the `<TransitionGroup>`.\n *\n * Note that `<TransitionGroup>`  does not define any animation behavior!\n * Exactly _how_ a list item animates is up to the individual transition\n * component. This means you can mix and match animations across different list\n * items.\n */\n\nvar TransitionGroup = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(TransitionGroup, _React$Component);\n\n  function TransitionGroup(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n\n    var handleExited = _this.handleExited.bind(_assertThisInitialized(_this)); // Initial children should all be entering, dependent on appear\n\n\n    _this.state = {\n      contextValue: {\n        isMounting: true\n      },\n      handleExited: handleExited,\n      firstRender: true\n    };\n    return _this;\n  }\n\n  var _proto = TransitionGroup.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.mounted = true;\n    this.setState({\n      contextValue: {\n        isMounting: false\n      }\n    });\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.mounted = false;\n  };\n\n  TransitionGroup.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, _ref) {\n    var prevChildMapping = _ref.children,\n        handleExited = _ref.handleExited,\n        firstRender = _ref.firstRender;\n    return {\n      children: firstRender ? getInitialChildMapping(nextProps, handleExited) : getNextChildMapping(nextProps, prevChildMapping, handleExited),\n      firstRender: false\n    };\n  } // node is `undefined` when user provided `nodeRef` prop\n  ;\n\n  _proto.handleExited = function handleExited(child, node) {\n    var currentChildMapping = getChildMapping(this.props.children);\n    if (child.key in currentChildMapping) return;\n\n    if (child.props.onExited) {\n      child.props.onExited(node);\n    }\n\n    if (this.mounted) {\n      this.setState(function (state) {\n        var children = _extends({}, state.children);\n\n        delete children[child.key];\n        return {\n          children: children\n        };\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        Component = _this$props.component,\n        childFactory = _this$props.childFactory,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"component\", \"childFactory\"]);\n\n    var contextValue = this.state.contextValue;\n    var children = values(this.state.children).map(childFactory);\n    delete props.appear;\n    delete props.enter;\n    delete props.exit;\n\n    if (Component === null) {\n      return /*#__PURE__*/React.createElement(TransitionGroupContext.Provider, {\n        value: contextValue\n      }, children);\n    }\n\n    return /*#__PURE__*/React.createElement(TransitionGroupContext.Provider, {\n      value: contextValue\n    }, /*#__PURE__*/React.createElement(Component, props, children));\n  };\n\n  return TransitionGroup;\n}(React.Component);\n\nTransitionGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * `<TransitionGroup>` renders a `<div>` by default. You can change this\n   * behavior by providing a `component` prop.\n   * If you use React v16+ and would like to avoid a wrapping `<div>` element\n   * you can pass in `component={null}`. This is useful if the wrapping div\n   * borks your css styles.\n   */\n  component: PropTypes.any,\n\n  /**\n   * A set of `<Transition>` components, that are toggled `in` and out as they\n   * leave. the `<TransitionGroup>` will inject specific transition props, so\n   * remember to spread them through if you are wrapping the `<Transition>` as\n   * with our `<Fade>` example.\n   *\n   * While this component is meant for multiple `Transition` or `CSSTransition`\n   * children, sometimes you may want to have a single transition child with\n   * content that you want to be transitioned out and in when you change it\n   * (e.g. routes, images etc.) In that case you can change the `key` prop of\n   * the transition child as you change its content, this will cause\n   * `TransitionGroup` to transition the child out and back in.\n   */\n  children: PropTypes.node,\n\n  /**\n   * A convenience prop that enables or disables appear animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * A convenience prop that enables or disables enter animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * A convenience prop that enables or disables exit animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * You may need to apply reactive updates to a child as it is exiting.\n   * This is generally done by using `cloneElement` however in the case of an exiting\n   * child the element has already been removed and not accessible to the consumer.\n   *\n   * If you do need to update a child as it leaves you can provide a `childFactory`\n   * to wrap every child, even the ones that are leaving.\n   *\n   * @type Function(child: ReactElement) -> ReactElement\n   */\n  childFactory: PropTypes.func\n} : {};\nTransitionGroup.defaultProps = defaultProps;\nexport default TransitionGroup;","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export const getFilterVal = state => state.contacts.filter;\n","import { getFilterVal } from 'redux/filter/filter-selector';\n\nexport const getContacts = state => state.contacts.items;\nexport const contactsLoading = state => state.contacts.loading;\n// console.log(contactsLoading());\nexport const findContactsByQuery = state => {\n  const contacts = getContacts(state);\n  const nameToFilter = getFilterVal(state);\n\n  return contacts.filter(\n    ({ name, phone }) =>\n      name.toLowerCase().includes(nameToFilter.toLowerCase()) ||\n      phone.includes(nameToFilter)\n  );\n};\n","import ContactItem from '../ContactItem/ContactItem';\nimport styles from './ContactList.module.css';\nimport transitionStyles from './transition.module.css';\n\nimport { useSelector } from 'react-redux';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\n\nimport { findContactsByQuery } from 'redux/contacts/contacts-selector';\n// import { defaultContacts } from 'redux/contacts/contacts-selector';\n\nexport default function ContactList() {\n  const contacts = useSelector(findContactsByQuery);\n\n  // const defContacts = useSelector(defaultContacts);\n  // const onDeleteClick = id => dispatch(deleteContact(id));\n\n  return (\n    <TransitionGroup component=\"ul\" className={styles.list}>\n      {contacts.map(contact => (\n        <CSSTransition\n          in={contacts.length > 0}\n          key={contact.id}\n          timeout={250}\n          classNames={transitionStyles}\n          unmountOnExit\n        >\n          <ContactItem key={contact.name} contact={contact} />\n        </CSSTransition>\n      ))}\n    </TransitionGroup>\n  );\n}\n","import styles from './Filter.module.scss';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilterVal } from 'redux/filter/filter-selector';\nimport { updateFilter } from 'redux/filter/filter-actions';\n\nexport default function Filter() {\n  const filterVal = useSelector(getFilterVal);\n  const dispatch = useDispatch();\n\n  const handleChange = ({ target: { value } }) => dispatch(updateFilter(value));\n\n  return (\n    <>\n      <div className={styles.filter}>\n        <p className={styles.filter__title}>Find contacts by name</p>\n        <input\n          className={styles.filter__field}\n          type=\"text\"\n          name=\"name\"\n          value={filterVal}\n          placeholder=\"Enter the name...\"\n          onChange={handleChange}\n        />\n      </div>\n    </>\n  );\n}\n","import ContactForm from '../../components/ContactForm/ContactForm';\nimport ContactList from '../../components/ContactList/ContactList';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport Filter from '../../components/Filter/Filter';\nimport { getContacts } from 'redux/contacts/contacts-selector';\nimport { addContact } from 'redux/contacts/contacts-operations';\n\nexport default function ContactsView() {\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const updateContacts = ({ name, phone }) => {\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      return toast.info('The contact with the same name already exists!', {\n        theme: 'colored',\n      });\n    } else {\n      dispatch(addContact({ name, phone }));\n      toast.success('New contact was added!', { theme: 'colored' });\n    }\n  };\n  return (\n    <>\n      <ToastContainer autoClose={2000} />\n      <h1 className=\"visually_hidden\">This is contacts page.</h1>\n\n      <ContactForm changeContactsState={updateContacts} />\n      <Filter />\n      <ContactList />\n    </>\n  );\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1NiH1\",\"submit__btn\":\"ContactForm_submit__btn__eF7FL\",\"name__label\":\"ContactForm_name__label__Ygtj5\",\"number__label\":\"ContactForm_number__label__2UXJd\",\"form__field\":\"ContactForm_form__field__3Q27b\",\"label\":\"ContactForm_label__3KgVy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact__item\":\"ContactItem_contact__item__16XEi\",\"contact__text\":\"ContactItem_contact__text__b5cWT\",\"delete__btn\":\"ContactItem_delete__btn__IVdMd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2T7aG\"};"],"sourceRoot":""}