{"version":3,"sources":["../node_modules/react-transition-group/esm/utils/ChildMapping.js","../node_modules/react-transition-group/esm/TransitionGroup.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../../src/utils/propValidator.ts","../../src/utils/constant.ts","../../src/utils/collapseToast.ts","../../src/utils/cssTransition.tsx","../../src/utils/mapper.ts","../../src/core/eventManager.ts","../../src/components/Icons.tsx","../../src/hooks/useToastContainer.ts","../../src/hooks/useToast.ts","../../src/components/CloseButton.tsx","../../src/components/ProgressBar.tsx","../../src/components/Toast.tsx","../../src/components/Transitions.tsx","../../src/components/ToastContainer.tsx","../../src/core/toast.ts","../node_modules/clsx/dist/clsx.js"],"names":["getChildMapping","children","mapFn","result","Object","create","Children","map","c","forEach","child","key","isValidElement","mapper","getProp","prop","props","getNextChildMapping","nextProps","prevChildMapping","onExited","nextChildMapping","prev","next","getValueForKey","i","nextKeysPending","pendingKeys","prevKey","length","push","childMapping","nextKey","pendingNextKey","mergeChildMappings","keys","hasPrev","hasNext","prevChild","isLeaving","in","cloneElement","bind","exit","enter","values","obj","k","TransitionGroup","_React$Component","context","_this","handleExited","call","this","self","ReferenceError","_assertThisInitialized","state","contextValue","isMounting","firstRender","_inheritsLoose","_proto","prototype","componentDidMount","mounted","setState","componentWillUnmount","getDerivedStateFromProps","_ref","appear","node","currentChildMapping","_extends","render","_this$props","Component","component","childFactory","_objectWithoutPropertiesLoose","React","createElement","TransitionGroupContext","Provider","value","propTypes","defaultProps","isNum","v","isNaN","isBool","isStr","isFn","parseClassName","isToastIdValid","toastId","canBeRendered","content","POSITION","TOP_LEFT","TOP_RIGHT","TOP_CENTER","BOTTOM_LEFT","BOTTOM_RIGHT","BOTTOM_CENTER","TYPE","INFO","SUCCESS","WARNING","ERROR","DEFAULT","duration","cssTransition","collapseDuration","appendPosition","collapse","isIn","position","preventExitTransition","done","nodeRef","enterClassName","exitClassName","baseClassName","useRef","animationStep","onEntered","e","target","current","dispatchEvent","Event","removeEventListener","type","className","scrollHeight","style","requestAnimationFrame","minHeight","height","transition","padding","margin","setTimeout","collapseToast","useLayoutEffect","addEventListener","useEffect","toToastItem","toast","status","containerId","id","theme","data","isLoading","icon","eventManager","list","Map","emitQueue","on","event","callback","has","set","get","off","cb","filter","delete","cancelEmit","timers","clearTimeout","emit","timer","Svg","rest","viewBox","width","fill","Icons","info","d","warning","success","error","spinner","useToastContainer","useReducer","x","forceUpdate","useState","toastIds","setToastIds","containerRef","toastToRender","isToastActive","indexOf","instance","toastKey","displayedToast","count","queue","getToast","clearWaitingQueue","limit","removeToast","dequeueToast","shift","appendToast","toastContent","buildToast","delay","options","staleId","enableMultiContainer","updateId","closeToast","isNotAnUpdate","toastAutoClose","containerAutoClose","toastProps","closeButton","rtl","toastClassName","bodyClassName","toastStyle","bodyStyle","onClick","pauseOnHover","pauseOnFocusLoss","draggable","draggablePercent","draggableDirection","closeOnClick","progressClassName","progressStyle","autoClose","hideProgressBar","progress","role","deleteToast","removed","queueLen","freeSlot","toDequeue","iconOut","Icon","iconProps","onOpen","onClose","getToastToRender","toRender","collection","Array","from","newestOnTop","reverse","p","getX","targetTouches","clientX","getY","clientY","useToast","isRunning","setIsRunning","setPreventExitTransition","toastRef","drag","start","y","delta","removalDistance","canCloseOnClick","canDrag","boundingRect","didMove","syncProps","onDragStart","document","onDragMove","onDragEnd","getBoundingClientRect","nativeEvent","offsetWidth","offsetHeight","onDragTransitionEnd","top","bottom","left","right","pauseToast","playToast","transform","opacity","Math","abs","once","hasFocus","window","eventHandlers","onMouseDown","onTouchStart","onMouseUp","onTouchEnd","onMouseEnter","onMouseLeave","CloseButton","ariaLabel","stopPropagation","fillRule","ProgressBar","hide","userStyle","controlledProgress","animationDuration","animationPlayState","defaultClassName","cx","classNames","Toast","Transition","cssClasses","isProgressControlled","closeButtonProps","Close","ref","Bounce","ToastContainer","forwardRef","getClassName","toastList","containerStyle","pointerEvents","displayName","latestInstance","containers","generateToastId","random","toString","substring","getToastId","dispatchToast","size","mergeOptions","createToastByType","loading","promise","pending","resetParams","resolver","input","baseParams","params","update","dismiss","then","catch","err","warn","dark","isActive","container","oldOptions","oldContent","nextOptions","onChange","containerInstance","item","toVal","mix","str","isArray","module","exports","tmp","arguments"],"mappings":"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","file":"static/js/6.d5bc75be.chunk.js","sourcesContent":["import { Children, cloneElement, isValidElement } from 'react';\n/**\n * Given `this.props.children`, return an object mapping key to child.\n *\n * @param {*} children `this.props.children`\n * @return {object} Mapping of key to child\n */\n\nexport function getChildMapping(children, mapFn) {\n  var mapper = function mapper(child) {\n    return mapFn && isValidElement(child) ? mapFn(child) : child;\n  };\n\n  var result = Object.create(null);\n  if (children) Children.map(children, function (c) {\n    return c;\n  }).forEach(function (child) {\n    // run the map function here instead so that the key is the computed one\n    result[child.key] = mapper(child);\n  });\n  return result;\n}\n/**\n * When you're adding or removing children some may be added or removed in the\n * same render pass. We want to show *both* since we want to simultaneously\n * animate elements in and out. This function takes a previous set of keys\n * and a new set of keys and merges them with its best guess of the correct\n * ordering. In the future we may expose some of the utilities in\n * ReactMultiChild to make this easy, but for now React itself does not\n * directly have this concept of the union of prevChildren and nextChildren\n * so we implement it here.\n *\n * @param {object} prev prev children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @param {object} next next children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @return {object} a key set that contains all keys in `prev` and all keys\n * in `next` in a reasonable order.\n */\n\nexport function mergeChildMappings(prev, next) {\n  prev = prev || {};\n  next = next || {};\n\n  function getValueForKey(key) {\n    return key in next ? next[key] : prev[key];\n  } // For each key of `next`, the list of keys to insert before that key in\n  // the combined list\n\n\n  var nextKeysPending = Object.create(null);\n  var pendingKeys = [];\n\n  for (var prevKey in prev) {\n    if (prevKey in next) {\n      if (pendingKeys.length) {\n        nextKeysPending[prevKey] = pendingKeys;\n        pendingKeys = [];\n      }\n    } else {\n      pendingKeys.push(prevKey);\n    }\n  }\n\n  var i;\n  var childMapping = {};\n\n  for (var nextKey in next) {\n    if (nextKeysPending[nextKey]) {\n      for (i = 0; i < nextKeysPending[nextKey].length; i++) {\n        var pendingNextKey = nextKeysPending[nextKey][i];\n        childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);\n      }\n    }\n\n    childMapping[nextKey] = getValueForKey(nextKey);\n  } // Finally, add the keys which didn't appear before any key in `next`\n\n\n  for (i = 0; i < pendingKeys.length; i++) {\n    childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);\n  }\n\n  return childMapping;\n}\n\nfunction getProp(child, prop, props) {\n  return props[prop] != null ? props[prop] : child.props[prop];\n}\n\nexport function getInitialChildMapping(props, onExited) {\n  return getChildMapping(props.children, function (child) {\n    return cloneElement(child, {\n      onExited: onExited.bind(null, child),\n      in: true,\n      appear: getProp(child, 'appear', props),\n      enter: getProp(child, 'enter', props),\n      exit: getProp(child, 'exit', props)\n    });\n  });\n}\nexport function getNextChildMapping(nextProps, prevChildMapping, onExited) {\n  var nextChildMapping = getChildMapping(nextProps.children);\n  var children = mergeChildMappings(prevChildMapping, nextChildMapping);\n  Object.keys(children).forEach(function (key) {\n    var child = children[key];\n    if (!isValidElement(child)) return;\n    var hasPrev = (key in prevChildMapping);\n    var hasNext = (key in nextChildMapping);\n    var prevChild = prevChildMapping[key];\n    var isLeaving = isValidElement(prevChild) && !prevChild.props.in; // item is new (entering)\n\n    if (hasNext && (!hasPrev || isLeaving)) {\n      // console.log('entering', key)\n      children[key] = cloneElement(child, {\n        onExited: onExited.bind(null, child),\n        in: true,\n        exit: getProp(child, 'exit', nextProps),\n        enter: getProp(child, 'enter', nextProps)\n      });\n    } else if (!hasNext && hasPrev && !isLeaving) {\n      // item is old (exiting)\n      // console.log('leaving', key)\n      children[key] = cloneElement(child, {\n        in: false\n      });\n    } else if (hasNext && hasPrev && isValidElement(prevChild)) {\n      // item hasn't changed transition states\n      // copy over the last transition props;\n      // console.log('unchanged', key)\n      children[key] = cloneElement(child, {\n        onExited: onExited.bind(null, child),\n        in: prevChild.props.in,\n        exit: getProp(child, 'exit', nextProps),\n        enter: getProp(child, 'enter', nextProps)\n      });\n    }\n  });\n  return children;\n}","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport TransitionGroupContext from './TransitionGroupContext';\nimport { getChildMapping, getInitialChildMapping, getNextChildMapping } from './utils/ChildMapping';\n\nvar values = Object.values || function (obj) {\n  return Object.keys(obj).map(function (k) {\n    return obj[k];\n  });\n};\n\nvar defaultProps = {\n  component: 'div',\n  childFactory: function childFactory(child) {\n    return child;\n  }\n};\n/**\n * The `<TransitionGroup>` component manages a set of transition components\n * (`<Transition>` and `<CSSTransition>`) in a list. Like with the transition\n * components, `<TransitionGroup>` is a state machine for managing the mounting\n * and unmounting of components over time.\n *\n * Consider the example below. As items are removed or added to the TodoList the\n * `in` prop is toggled automatically by the `<TransitionGroup>`.\n *\n * Note that `<TransitionGroup>`  does not define any animation behavior!\n * Exactly _how_ a list item animates is up to the individual transition\n * component. This means you can mix and match animations across different list\n * items.\n */\n\nvar TransitionGroup = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(TransitionGroup, _React$Component);\n\n  function TransitionGroup(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n\n    var handleExited = _this.handleExited.bind(_assertThisInitialized(_this)); // Initial children should all be entering, dependent on appear\n\n\n    _this.state = {\n      contextValue: {\n        isMounting: true\n      },\n      handleExited: handleExited,\n      firstRender: true\n    };\n    return _this;\n  }\n\n  var _proto = TransitionGroup.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.mounted = true;\n    this.setState({\n      contextValue: {\n        isMounting: false\n      }\n    });\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.mounted = false;\n  };\n\n  TransitionGroup.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, _ref) {\n    var prevChildMapping = _ref.children,\n        handleExited = _ref.handleExited,\n        firstRender = _ref.firstRender;\n    return {\n      children: firstRender ? getInitialChildMapping(nextProps, handleExited) : getNextChildMapping(nextProps, prevChildMapping, handleExited),\n      firstRender: false\n    };\n  } // node is `undefined` when user provided `nodeRef` prop\n  ;\n\n  _proto.handleExited = function handleExited(child, node) {\n    var currentChildMapping = getChildMapping(this.props.children);\n    if (child.key in currentChildMapping) return;\n\n    if (child.props.onExited) {\n      child.props.onExited(node);\n    }\n\n    if (this.mounted) {\n      this.setState(function (state) {\n        var children = _extends({}, state.children);\n\n        delete children[child.key];\n        return {\n          children: children\n        };\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        Component = _this$props.component,\n        childFactory = _this$props.childFactory,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"component\", \"childFactory\"]);\n\n    var contextValue = this.state.contextValue;\n    var children = values(this.state.children).map(childFactory);\n    delete props.appear;\n    delete props.enter;\n    delete props.exit;\n\n    if (Component === null) {\n      return /*#__PURE__*/React.createElement(TransitionGroupContext.Provider, {\n        value: contextValue\n      }, children);\n    }\n\n    return /*#__PURE__*/React.createElement(TransitionGroupContext.Provider, {\n      value: contextValue\n    }, /*#__PURE__*/React.createElement(Component, props, children));\n  };\n\n  return TransitionGroup;\n}(React.Component);\n\nTransitionGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * `<TransitionGroup>` renders a `<div>` by default. You can change this\n   * behavior by providing a `component` prop.\n   * If you use React v16+ and would like to avoid a wrapping `<div>` element\n   * you can pass in `component={null}`. This is useful if the wrapping div\n   * borks your css styles.\n   */\n  component: PropTypes.any,\n\n  /**\n   * A set of `<Transition>` components, that are toggled `in` and out as they\n   * leave. the `<TransitionGroup>` will inject specific transition props, so\n   * remember to spread them through if you are wrapping the `<Transition>` as\n   * with our `<Fade>` example.\n   *\n   * While this component is meant for multiple `Transition` or `CSSTransition`\n   * children, sometimes you may want to have a single transition child with\n   * content that you want to be transitioned out and in when you change it\n   * (e.g. routes, images etc.) In that case you can change the `key` prop of\n   * the transition child as you change its content, this will cause\n   * `TransitionGroup` to transition the child out and back in.\n   */\n  children: PropTypes.node,\n\n  /**\n   * A convenience prop that enables or disables appear animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * A convenience prop that enables or disables enter animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * A convenience prop that enables or disables exit animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * You may need to apply reactive updates to a child as it is exiting.\n   * This is generally done by using `cloneElement` however in the case of an exiting\n   * child the element has already been removed and not accessible to the consumer.\n   *\n   * If you do need to update a child as it leaves you can provide a `childFactory`\n   * to wrap every child, even the ones that are leaving.\n   *\n   * @type Function(child: ReactElement) -> ReactElement\n   */\n  childFactory: PropTypes.func\n} : {};\nTransitionGroup.defaultProps = defaultProps;\nexport default TransitionGroup;","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import { isValidElement } from 'react';\n\nimport { Id } from '../types';\n\nexport function isNum(v: any): v is Number {\n  return typeof v === 'number' && !isNaN(v);\n}\n\nexport function isBool(v: any): v is Boolean {\n  return typeof v === 'boolean';\n}\n\nexport function isStr(v: any): v is String {\n  return typeof v === 'string';\n}\n\nexport function isFn(v: any): v is Function {\n  return typeof v === 'function';\n}\n\nexport function parseClassName(v: any) {\n  return isStr(v) || isFn(v) ? v : null;\n}\n\nexport function isToastIdValid(toastId?: Id) {\n  return toastId === 0 || toastId;\n}\n\nexport function getAutoCloseDelay(\n  toastAutoClose?: false | number,\n  containerAutoClose?: false | number\n) {\n  return toastAutoClose === false ||\n    (isNum(toastAutoClose) && toastAutoClose > 0)\n    ? toastAutoClose\n    : containerAutoClose;\n}\n\nexport function canBeRendered<T>(content: T): boolean {\n  return (\n    isValidElement(content) || isStr(content) || isFn(content) || isNum(content)\n  );\n}\n","import { ToastPosition, TypeOptions } from '../types';\n\ntype KeyOfPosition =\n  | 'TOP_LEFT'\n  | 'TOP_RIGHT'\n  | 'TOP_CENTER'\n  | 'BOTTOM_LEFT'\n  | 'BOTTOM_RIGHT'\n  | 'BOTTOM_CENTER';\n\ntype KeyOfType = 'INFO' | 'SUCCESS' | 'WARNING' | 'ERROR' | 'DEFAULT';\n\nexport const POSITION: { [key in KeyOfPosition]: ToastPosition } = {\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n  TOP_CENTER: 'top-center',\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  BOTTOM_CENTER: 'bottom-center'\n};\n\nexport const TYPE: { [key in KeyOfType]: TypeOptions } = {\n  INFO: 'info',\n  SUCCESS: 'success',\n  WARNING: 'warning',\n  ERROR: 'error',\n  DEFAULT: 'default'\n};\n\nexport const enum Default {\n  COLLAPSE_DURATION = 300,\n  DEBOUNCE_DURATION = 50,\n  CSS_NAMESPACE = 'Toastify',\n  DRAGGABLE_PERCENT = 80\n}\n\nexport const enum Direction {\n  X = 'x',\n  Y = 'y'\n}\n\nexport const enum SyntheticEvent {\n  ENTRANCE_ANIMATION_END = 'd'\n}\n","import { Default } from './constant';\n\n/**\n * Used to collapse toast after exit animation\n */\nexport function collapseToast(\n  node: HTMLElement,\n  done: () => void,\n  duration = Default.COLLAPSE_DURATION\n) {\n  const { scrollHeight, style } = node;\n\n  requestAnimationFrame(() => {\n    style.minHeight = 'initial';\n    style.height = scrollHeight + 'px';\n    style.transition = `all ${duration}ms`;\n\n    requestAnimationFrame(() => {\n      style.height = '0';\n      style.padding = '0';\n      style.margin = '0';\n      setTimeout(done, duration as number);\n    });\n  });\n}\n","import React, { useEffect, useLayoutEffect, useRef } from 'react';\nimport { collapseToast } from './collapseToast';\nimport { Default, SyntheticEvent } from './constant';\n\nimport { ToastTransitionProps } from '../types';\n\nexport interface CSSTransitionProps {\n  /**\n   * Css class to apply when toast enter\n   */\n  enter: string;\n\n  /**\n   * Css class to apply when toast leave\n   */\n  exit: string;\n\n  /**\n   * Append current toast position to the classname.\n   * If multiple classes are provided, only the last one will get the position\n   * For instance `myclass--top-center`...\n   * `Default: false`\n   */\n  appendPosition?: boolean;\n\n  /**\n   * Collapse toast smoothly when exit animation end\n   * `Default: true`\n   */\n  collapse?: boolean;\n\n  /**\n   * Collapse transition duration\n   * `Default: 300`\n   */\n  collapseDuration?: number;\n}\n\nconst enum AnimationStep {\n  Enter,\n  Exit\n}\n\n/**\n * Css animation that just work.\n * You could use animate.css for instance\n *\n *\n * ```\n * cssTransition({\n *   enter: \"animate__animated animate__bounceIn\",\n *   exit: \"animate__animated animate__bounceOut\"\n * })\n * ```\n *\n */\nexport function cssTransition({\n  enter,\n  exit,\n  appendPosition = false,\n  collapse = true,\n  collapseDuration = Default.COLLAPSE_DURATION\n}: CSSTransitionProps) {\n  return function ToastTransition({\n    children,\n    position,\n    preventExitTransition,\n    done,\n    nodeRef,\n    isIn\n  }: ToastTransitionProps) {\n    const enterClassName = appendPosition ? `${enter}--${position}` : enter;\n    const exitClassName = appendPosition ? `${exit}--${position}` : exit;\n    const baseClassName = useRef<string>();\n    const animationStep = useRef(AnimationStep.Enter);\n\n    useLayoutEffect(() => {\n      onEnter();\n    }, []);\n\n    useEffect(() => {\n      if (!isIn) preventExitTransition ? onExited() : onExit();\n    }, [isIn]);\n\n    function onEnter() {\n      const node = nodeRef.current!;\n      baseClassName.current = node.className;\n      node.className += ` ${enterClassName}`;\n      node.addEventListener('animationend', onEntered);\n      node.addEventListener('animationcancel', onEntered);\n    }\n\n    function onEntered(e: AnimationEvent) {\n      if (e.target !== nodeRef.current) return;\n\n      const node = nodeRef.current!;\n      node.dispatchEvent(new Event(SyntheticEvent.ENTRANCE_ANIMATION_END));\n      node.removeEventListener('animationend', onEntered);\n      node.removeEventListener('animationcancel', onEntered);\n      if (\n        animationStep.current === AnimationStep.Enter &&\n        e.type !== 'animationcancel'\n      ) {\n        node.className = baseClassName.current!;\n      }\n    }\n\n    function onExit() {\n      animationStep.current = AnimationStep.Exit;\n      const node = nodeRef.current!;\n\n      node.className += ` ${exitClassName}`;\n      node.addEventListener('animationend', onExited);\n    }\n\n    function onExited() {\n      const node = nodeRef.current!;\n\n      node.removeEventListener('animationend', onExited);\n      collapse ? collapseToast(node, done, collapseDuration) : done();\n    }\n\n    return <>{children}</>;\n  };\n}\n","import { Toast, ToastItem, ToastItemStatus } from '../types';\n\nexport function toToastItem(toast: Toast, status: ToastItemStatus): ToastItem {\n  return {\n    content: toast.content,\n    containerId: toast.props.containerId,\n    id: toast.props.toastId,\n    theme: toast.props.theme,\n    type: toast.props.type,\n    data: toast.props.data || {},\n    isLoading: toast.props.isLoading,\n    icon: toast.props.icon,\n    status\n  };\n}\n","import {\n  Id,\n  ToastContent,\n  ClearWaitingQueueParams,\n  NotValidatedToastProps,\n  ToastItem\n} from '../types';\nimport { ContainerInstance } from '../hooks';\n\nexport const enum Event {\n  Show,\n  Clear,\n  DidMount,\n  WillUnmount,\n  Change,\n  ClearWaitingQueue\n}\n\ntype OnShowCallback = (\n  content: ToastContent,\n  options: NotValidatedToastProps\n) => void;\ntype OnClearCallback = (id?: Id) => void;\ntype OnClearWaitingQueue = (params: ClearWaitingQueueParams) => void;\ntype OnDidMountCallback = (containerInstance: ContainerInstance) => void;\ntype OnWillUnmountCallback = OnDidMountCallback;\n\nexport type OnChangeCallback = (toast: ToastItem) => void;\n\ntype Callback =\n  | OnShowCallback\n  | OnClearCallback\n  | OnClearWaitingQueue\n  | OnDidMountCallback\n  | OnWillUnmountCallback\n  | OnChangeCallback;\ntype TimeoutId = ReturnType<typeof setTimeout>;\n\nexport interface EventManager {\n  list: Map<Event, Callback[]>;\n  emitQueue: Map<Event, TimeoutId[]>;\n  on(event: Event.Show, callback: OnShowCallback): EventManager;\n  on(event: Event.Clear, callback: OnClearCallback): EventManager;\n  on(\n    event: Event.ClearWaitingQueue,\n    callback: OnClearWaitingQueue\n  ): EventManager;\n  on(event: Event.DidMount, callback: OnDidMountCallback): EventManager;\n  on(event: Event.WillUnmount, callback: OnWillUnmountCallback): EventManager;\n  on(event: Event.Change, callback: OnChangeCallback): EventManager;\n  off(event: Event, callback?: Callback): EventManager;\n  cancelEmit(event: Event): EventManager;\n  emit(\n    event: Event.Show,\n    content: React.ReactNode,\n    options: NotValidatedToastProps\n  ): void;\n  emit(event: Event.Clear, id?: string | number): void;\n  emit(event: Event.ClearWaitingQueue, params: ClearWaitingQueueParams): void;\n  emit(event: Event.DidMount, containerInstance: ContainerInstance): void;\n  emit(event: Event.WillUnmount, containerInstance: ContainerInstance): void;\n  emit(event: Event.Change, data: ToastItem): void;\n}\n\nexport const eventManager: EventManager = {\n  list: new Map(),\n  emitQueue: new Map(),\n\n  on(event: Event, callback: Callback) {\n    this.list.has(event) || this.list.set(event, []);\n    this.list.get(event)!.push(callback);\n    return this;\n  },\n\n  off(event, callback) {\n    if (callback) {\n      const cb = this.list.get(event)!.filter(cb => cb !== callback);\n      this.list.set(event, cb);\n      return this;\n    }\n    this.list.delete(event);\n    return this;\n  },\n\n  cancelEmit(event) {\n    const timers = this.emitQueue.get(event);\n    if (timers) {\n      timers.forEach(clearTimeout);\n      this.emitQueue.delete(event);\n    }\n\n    return this;\n  },\n\n  /**\n   * Enqueue the event at the end of the call stack\n   * Doing so let the user call toast as follow:\n   * toast('1')\n   * toast('2')\n   * toast('3')\n   * Without setTimemout the code above will not work\n   */\n  emit(event: Event, ...args: any[]) {\n    this.list.has(event) &&\n      this.list.get(event)!.forEach((callback: Callback) => {\n        const timer: TimeoutId = setTimeout(() => {\n          // @ts-ignore\n          callback(...args);\n        }, 0);\n\n        this.emitQueue.has(event) || this.emitQueue.set(event, []);\n        this.emitQueue.get(event)!.push(timer);\n      });\n  }\n};\n","import React, { cloneElement, isValidElement } from 'react';\n\nimport { Theme, ToastProps, TypeOptions } from '../types';\nimport { Default, isFn, isNum, isStr } from '../utils';\n\n/**\n * Used when providing custom icon\n */\nexport interface IconProps {\n  theme: Theme;\n  type: TypeOptions;\n}\n\nexport type BuiltInIconProps = React.SVGProps<SVGSVGElement> & IconProps;\n\nconst Svg: React.FC<BuiltInIconProps> = ({ theme, type, ...rest }) => (\n  <svg\n    viewBox=\"0 0 24 24\"\n    width=\"100%\"\n    height=\"100%\"\n    fill={\n      theme === 'colored'\n        ? 'currentColor'\n        : `var(--toastify-icon-color-${type})`\n    }\n    {...rest}\n  />\n);\n\nfunction Warning(props: BuiltInIconProps) {\n  return (\n    <Svg {...props}>\n      <path d=\"M23.32 17.191L15.438 2.184C14.728.833 13.416 0 11.996 0c-1.42 0-2.733.833-3.443 2.184L.533 17.448a4.744 4.744 0 000 4.368C1.243 23.167 2.555 24 3.975 24h16.05C22.22 24 24 22.044 24 19.632c0-.904-.251-1.746-.68-2.44zm-9.622 1.46c0 1.033-.724 1.823-1.698 1.823s-1.698-.79-1.698-1.822v-.043c0-1.028.724-1.822 1.698-1.822s1.698.79 1.698 1.822v.043zm.039-12.285l-.84 8.06c-.057.581-.408.943-.897.943-.49 0-.84-.367-.896-.942l-.84-8.065c-.057-.624.25-1.095.779-1.095h1.91c.528.005.84.476.784 1.1z\" />\n    </Svg>\n  );\n}\n\nfunction Info(props: BuiltInIconProps) {\n  return (\n    <Svg {...props}>\n      <path d=\"M12 0a12 12 0 1012 12A12.013 12.013 0 0012 0zm.25 5a1.5 1.5 0 11-1.5 1.5 1.5 1.5 0 011.5-1.5zm2.25 13.5h-4a1 1 0 010-2h.75a.25.25 0 00.25-.25v-4.5a.25.25 0 00-.25-.25h-.75a1 1 0 010-2h1a2 2 0 012 2v4.75a.25.25 0 00.25.25h.75a1 1 0 110 2z\" />\n    </Svg>\n  );\n}\n\nfunction Success(props: BuiltInIconProps) {\n  return (\n    <Svg {...props}>\n      <path d=\"M12 0a12 12 0 1012 12A12.014 12.014 0 0012 0zm6.927 8.2l-6.845 9.289a1.011 1.011 0 01-1.43.188l-4.888-3.908a1 1 0 111.25-1.562l4.076 3.261 6.227-8.451a1 1 0 111.61 1.183z\" />\n    </Svg>\n  );\n}\n\nfunction Error(props: BuiltInIconProps) {\n  return (\n    <Svg {...props}>\n      <path d=\"M11.983 0a12.206 12.206 0 00-8.51 3.653A11.8 11.8 0 000 12.207 11.779 11.779 0 0011.8 24h.214A12.111 12.111 0 0024 11.791 11.766 11.766 0 0011.983 0zM10.5 16.542a1.476 1.476 0 011.449-1.53h.027a1.527 1.527 0 011.523 1.47 1.475 1.475 0 01-1.449 1.53h-.027a1.529 1.529 0 01-1.523-1.47zM11 12.5v-6a1 1 0 012 0v6a1 1 0 11-2 0z\" />\n    </Svg>\n  );\n}\n\nfunction Spinner() {\n  return <div className={`${Default.CSS_NAMESPACE}__spinner`} />;\n}\n\nexport const Icons = {\n  info: Info,\n  warning: Warning,\n  success: Success,\n  error: Error,\n  spinner: Spinner\n};\n\nconst maybeIcon = (type: string): type is keyof typeof Icons => type in Icons;\n\nexport function getIcon({ theme, type, isLoading, icon }: ToastProps) {\n  let Icon: React.ReactNode = null;\n  const iconProps = { theme, type };\n\n  if (icon === false) {\n    // hide\n  } else if (isFn(icon)) {\n    Icon = icon(iconProps);\n  } else if (isValidElement(icon)) {\n    Icon = cloneElement(icon, iconProps);\n  } else if (isStr(icon) || isNum(icon)) {\n    Icon = icon;\n  } else if (isLoading) {\n    Icon = Icons.spinner();\n  } else if (maybeIcon(type)) {\n    Icon = Icons[type](iconProps);\n  }\n\n  return Icon;\n}\n","import {\n  useEffect,\n  useRef,\n  useReducer,\n  cloneElement,\n  isValidElement,\n  useState\n} from 'react';\nimport {\n  parseClassName,\n  canBeRendered,\n  isBool,\n  isFn,\n  isNum,\n  isStr,\n  isToastIdValid,\n  getAutoCloseDelay,\n  toToastItem\n} from '../utils';\nimport { eventManager, Event } from '../core/eventManager';\n\nimport {\n  Id,\n  ToastContainerProps,\n  ToastProps,\n  ToastContent,\n  Toast,\n  ToastPosition,\n  ClearWaitingQueueParams,\n  NotValidatedToastProps,\n  ToastTransition\n} from '../types';\n\nimport { getIcon } from '../components/Icons';\n\ninterface QueuedToast {\n  toastContent: ToastContent;\n  toastProps: ToastProps;\n  staleId?: Id;\n}\n\nexport interface ContainerInstance {\n  toastKey: number;\n  displayedToast: number;\n  props: ToastContainerProps;\n  containerId?: Id | null;\n  isToastActive: (toastId: Id) => boolean;\n  getToast: (id: Id) => Toast | null | undefined;\n  queue: QueuedToast[];\n  count: number;\n}\n\nexport function useToastContainer(props: ToastContainerProps) {\n  const [, forceUpdate] = useReducer(x => x + 1, 0);\n  const [toastIds, setToastIds] = useState<Id[]>([]);\n  const containerRef = useRef(null);\n  const toastToRender = useRef(new Map<Id, Toast>()).current;\n  const isToastActive = (id: Id) => toastIds.indexOf(id) !== -1;\n  const instance = useRef<ContainerInstance>({\n    toastKey: 1,\n    displayedToast: 0,\n    count: 0,\n    queue: [],\n    props,\n    containerId: null,\n    isToastActive,\n    getToast: id => toastToRender.get(id)\n  }).current;\n\n  useEffect(() => {\n    instance.containerId = props.containerId;\n    eventManager\n      .cancelEmit(Event.WillUnmount)\n      .on(Event.Show, buildToast)\n      .on(Event.Clear, toastId => containerRef.current && removeToast(toastId))\n      .on(Event.ClearWaitingQueue, clearWaitingQueue)\n      .emit(Event.DidMount, instance);\n\n    return () => eventManager.emit(Event.WillUnmount, instance);\n  }, []);\n\n  useEffect(() => {\n    instance.props = props;\n    instance.isToastActive = isToastActive;\n    instance.displayedToast = toastIds.length;\n  });\n\n  function clearWaitingQueue({ containerId }: ClearWaitingQueueParams) {\n    const { limit } = instance.props;\n    if (limit && (!containerId || instance.containerId === containerId)) {\n      instance.count -= instance.queue.length;\n      instance.queue = [];\n    }\n  }\n\n  function removeToast(toastId?: Id) {\n    setToastIds(state =>\n      isToastIdValid(toastId) ? state.filter(id => id !== toastId) : []\n    );\n  }\n\n  function dequeueToast() {\n    const { toastContent, toastProps, staleId } =\n      instance.queue.shift() as QueuedToast;\n    appendToast(toastContent, toastProps, staleId);\n  }\n\n  /**\n   * check if a container is attached to the dom\n   * check for multi-container, build only if associated\n   * check for duplicate toastId if no update\n   */\n  function isNotValid(options: NotValidatedToastProps) {\n    return (\n      !containerRef.current ||\n      (instance.props.enableMultiContainer &&\n        options.containerId !== instance.props.containerId) ||\n      (toastToRender.has(options.toastId) && options.updateId == null)\n    );\n  }\n\n  // this function and all the function called inside needs to rely on refs\n  function buildToast(\n    content: ToastContent,\n    { delay, staleId, ...options }: NotValidatedToastProps\n  ) {\n    if (!canBeRendered(content) || isNotValid(options)) return;\n\n    const { toastId, updateId, data } = options;\n    const { props } = instance;\n    const closeToast = () => removeToast(toastId);\n    const isNotAnUpdate = updateId == null;\n\n    if (isNotAnUpdate) instance.count++;\n\n    const toastProps: ToastProps = {\n      toastId,\n      updateId,\n      data,\n      containerId: options.containerId,\n      isLoading: options.isLoading,\n      theme: options.theme || props.theme!,\n      icon: options.icon != null ? options.icon : props.icon,\n      isIn: false,\n      key: options.key || instance.toastKey++,\n      type: options.type!,\n      closeToast: closeToast,\n      closeButton: options.closeButton,\n      rtl: props.rtl,\n      position: options.position || (props.position as ToastPosition),\n      transition: options.transition || (props.transition as ToastTransition),\n      className: parseClassName(options.className || props.toastClassName),\n      bodyClassName: parseClassName(\n        options.bodyClassName || props.bodyClassName\n      ),\n      style: options.style || props.toastStyle,\n      bodyStyle: options.bodyStyle || props.bodyStyle,\n      onClick: options.onClick || props.onClick,\n      pauseOnHover: isBool(options.pauseOnHover)\n        ? options.pauseOnHover\n        : props.pauseOnHover,\n      pauseOnFocusLoss: isBool(options.pauseOnFocusLoss)\n        ? options.pauseOnFocusLoss\n        : props.pauseOnFocusLoss,\n      draggable: isBool(options.draggable)\n        ? options.draggable\n        : props.draggable,\n      draggablePercent:\n        options.draggablePercent || (props.draggablePercent as number),\n      draggableDirection:\n        options.draggableDirection || props.draggableDirection,\n      closeOnClick: isBool(options.closeOnClick)\n        ? options.closeOnClick\n        : props.closeOnClick,\n      progressClassName: parseClassName(\n        options.progressClassName || props.progressClassName\n      ),\n      progressStyle: options.progressStyle || props.progressStyle,\n      autoClose: options.isLoading\n        ? false\n        : getAutoCloseDelay(options.autoClose, props.autoClose),\n      hideProgressBar: isBool(options.hideProgressBar)\n        ? options.hideProgressBar\n        : props.hideProgressBar,\n      progress: options.progress,\n      role: options.role || props.role,\n      deleteToast() {\n        const removed = toToastItem(toastToRender.get(toastId)!, 'removed');\n        toastToRender.delete(toastId);\n\n        eventManager.emit(Event.Change, removed);\n\n        const queueLen = instance.queue.length;\n        instance.count = isToastIdValid(toastId)\n          ? instance.count - 1\n          : instance.count - instance.displayedToast;\n\n        if (instance.count < 0) instance.count = 0;\n\n        if (queueLen > 0) {\n          const freeSlot = isToastIdValid(toastId) ? 1 : instance.props.limit!;\n\n          if (queueLen === 1 || freeSlot === 1) {\n            instance.displayedToast++;\n            dequeueToast();\n          } else {\n            const toDequeue = freeSlot > queueLen ? queueLen : freeSlot;\n            instance.displayedToast = toDequeue;\n\n            for (let i = 0; i < toDequeue; i++) dequeueToast();\n          }\n        } else {\n          forceUpdate();\n        }\n      }\n    };\n\n    toastProps.iconOut = getIcon(toastProps);\n\n    if (isFn(options.onOpen)) toastProps.onOpen = options.onOpen;\n    if (isFn(options.onClose)) toastProps.onClose = options.onClose;\n\n    toastProps.closeButton = props.closeButton;\n\n    if (options.closeButton === false || canBeRendered(options.closeButton)) {\n      toastProps.closeButton = options.closeButton;\n    } else if (options.closeButton === true) {\n      toastProps.closeButton = canBeRendered(props.closeButton)\n        ? props.closeButton\n        : true;\n    }\n\n    let toastContent = content;\n\n    if (isValidElement(content) && !isStr(content.type)) {\n      toastContent = cloneElement(content, {\n        closeToast,\n        toastProps,\n        data\n      });\n    } else if (isFn(content)) {\n      toastContent = content({ closeToast, toastProps, data });\n    }\n\n    // not handling limit + delay by design. Waiting for user feedback first\n    if (\n      props.limit &&\n      props.limit > 0 &&\n      instance.count > props.limit &&\n      isNotAnUpdate\n    ) {\n      instance.queue.push({ toastContent, toastProps, staleId });\n    } else if (isNum(delay)) {\n      setTimeout(() => {\n        appendToast(toastContent, toastProps, staleId);\n      }, delay);\n    } else {\n      appendToast(toastContent, toastProps, staleId);\n    }\n  }\n\n  function appendToast(\n    content: ToastContent,\n    toastProps: ToastProps,\n    staleId?: Id\n  ) {\n    const { toastId } = toastProps;\n\n    if (staleId) toastToRender.delete(staleId);\n\n    const toast = {\n      content,\n      props: toastProps\n    };\n    toastToRender.set(toastId, toast);\n\n    setToastIds(state => [...state, toastId].filter(id => id !== staleId));\n    eventManager.emit(\n      Event.Change,\n      toToastItem(toast, toast.props.updateId == null ? 'added' : 'updated')\n    );\n  }\n\n  function getToastToRender<T>(\n    cb: (position: ToastPosition, toastList: Toast[]) => T\n  ) {\n    const toRender = new Map<ToastPosition, Toast[]>();\n    const collection = Array.from(toastToRender.values());\n\n    if (props.newestOnTop) collection.reverse();\n\n    collection.forEach(toast => {\n      const { position } = toast.props;\n      toRender.has(position) || toRender.set(position, []);\n      toRender.get(position)!.push(toast);\n    });\n\n    return Array.from(toRender, p => cb(p[0], p[1]));\n  }\n\n  return {\n    getToastToRender,\n    containerRef,\n    isToastActive\n  };\n}\n","import {\n  useState,\n  useRef,\n  useEffect,\n  isValidElement,\n  DOMAttributes\n} from 'react';\n\nimport { isFn, Default, Direction, SyntheticEvent } from '../utils';\nimport { ToastProps } from '../types';\n\ninterface Draggable {\n  start: number;\n  x: number;\n  y: number;\n  delta: number;\n  removalDistance: number;\n  canCloseOnClick: boolean;\n  canDrag: boolean;\n  boundingRect: DOMRect | null;\n  didMove: boolean;\n}\n\ntype DragEvent = MouseEvent & TouchEvent;\n\nfunction getX(e: DragEvent) {\n  return e.targetTouches && e.targetTouches.length >= 1\n    ? e.targetTouches[0].clientX\n    : e.clientX;\n}\n\nfunction getY(e: DragEvent) {\n  return e.targetTouches && e.targetTouches.length >= 1\n    ? e.targetTouches[0].clientY\n    : e.clientY;\n}\n\nexport function useToast(props: ToastProps) {\n  const [isRunning, setIsRunning] = useState(false);\n  const [preventExitTransition, setPreventExitTransition] = useState(false);\n  const toastRef = useRef<HTMLDivElement>(null);\n  const drag = useRef<Draggable>({\n    start: 0,\n    x: 0,\n    y: 0,\n    delta: 0,\n    removalDistance: 0,\n    canCloseOnClick: true,\n    canDrag: false,\n    boundingRect: null,\n    didMove: false\n  }).current;\n  const syncProps = useRef(props);\n  const { autoClose, pauseOnHover, closeToast, onClick, closeOnClick } = props;\n\n  useEffect(() => {\n    syncProps.current = props;\n  });\n\n  useEffect(() => {\n    if (toastRef.current)\n      toastRef.current.addEventListener(\n        SyntheticEvent.ENTRANCE_ANIMATION_END,\n        playToast,\n        { once: true }\n      );\n\n    if (isFn(props.onOpen))\n      props.onOpen(isValidElement(props.children) && props.children.props);\n\n    return () => {\n      const props = syncProps.current;\n      if (isFn(props.onClose))\n        props.onClose(isValidElement(props.children) && props.children.props);\n    };\n  }, []);\n\n  useEffect(() => {\n    props.pauseOnFocusLoss && bindFocusEvents();\n    return () => {\n      props.pauseOnFocusLoss && unbindFocusEvents();\n    };\n  }, [props.pauseOnFocusLoss]);\n\n  function onDragStart(\n    e: React.MouseEvent<HTMLElement, MouseEvent> | React.TouchEvent<HTMLElement>\n  ) {\n    if (props.draggable) {\n      bindDragEvents();\n      const toast = toastRef.current!;\n      drag.canCloseOnClick = true;\n      drag.canDrag = true;\n      drag.boundingRect = toast.getBoundingClientRect();\n      toast.style.transition = '';\n      drag.x = getX(e.nativeEvent as DragEvent);\n      drag.y = getY(e.nativeEvent as DragEvent);\n\n      if (props.draggableDirection === Direction.X) {\n        drag.start = drag.x;\n        drag.removalDistance =\n          toast.offsetWidth * (props.draggablePercent / 100);\n      } else {\n        drag.start = drag.y;\n        drag.removalDistance =\n          toast.offsetHeight *\n          (props.draggablePercent === Default.DRAGGABLE_PERCENT\n            ? props.draggablePercent * 1.5\n            : props.draggablePercent / 100);\n      }\n    }\n  }\n\n  function onDragTransitionEnd() {\n    if (drag.boundingRect) {\n      const { top, bottom, left, right } = drag.boundingRect;\n\n      if (\n        props.pauseOnHover &&\n        drag.x >= left &&\n        drag.x <= right &&\n        drag.y >= top &&\n        drag.y <= bottom\n      ) {\n        pauseToast();\n      } else {\n        playToast();\n      }\n    }\n  }\n\n  function playToast() {\n    setIsRunning(true);\n  }\n\n  function pauseToast() {\n    setIsRunning(false);\n  }\n\n  function bindFocusEvents() {\n    if (!document.hasFocus()) pauseToast();\n\n    window.addEventListener('focus', playToast);\n    window.addEventListener('blur', pauseToast);\n  }\n\n  function unbindFocusEvents() {\n    window.removeEventListener('focus', playToast);\n    window.removeEventListener('blur', pauseToast);\n  }\n\n  function bindDragEvents() {\n    drag.didMove = false;\n    document.addEventListener('mousemove', onDragMove);\n    document.addEventListener('mouseup', onDragEnd);\n\n    document.addEventListener('touchmove', onDragMove);\n    document.addEventListener('touchend', onDragEnd);\n  }\n\n  function unbindDragEvents() {\n    document.removeEventListener('mousemove', onDragMove);\n    document.removeEventListener('mouseup', onDragEnd);\n\n    document.removeEventListener('touchmove', onDragMove);\n    document.removeEventListener('touchend', onDragEnd);\n  }\n\n  function onDragMove(e: MouseEvent | TouchEvent) {\n    const toast = toastRef.current!;\n    if (drag.canDrag && toast) {\n      drag.didMove = true;\n      if (isRunning) pauseToast();\n      drag.x = getX(e as DragEvent);\n      drag.y = getY(e as DragEvent);\n      if (props.draggableDirection === Direction.X) {\n        drag.delta = drag.x - drag.start;\n      } else {\n        drag.delta = drag.y - drag.start;\n      }\n\n      // prevent false positif during a toast click\n      if (drag.start !== drag.x) drag.canCloseOnClick = false;\n      toast.style.transform = `translate${props.draggableDirection}(${drag.delta}px)`;\n      toast.style.opacity = `${\n        1 - Math.abs(drag.delta / drag.removalDistance)\n      }`;\n    }\n  }\n\n  function onDragEnd() {\n    unbindDragEvents();\n    const toast = toastRef.current!;\n    if (drag.canDrag && drag.didMove && toast) {\n      drag.canDrag = false;\n      if (Math.abs(drag.delta) > drag.removalDistance) {\n        setPreventExitTransition(true);\n        props.closeToast();\n        return;\n      }\n      toast.style.transition = 'transform 0.2s, opacity 0.2s';\n      toast.style.transform = `translate${props.draggableDirection}(0)`;\n      toast.style.opacity = '1';\n    }\n  }\n\n  const eventHandlers: DOMAttributes<HTMLElement> = {\n    onMouseDown: onDragStart,\n    onTouchStart: onDragStart,\n    onMouseUp: onDragTransitionEnd,\n    onTouchEnd: onDragTransitionEnd\n  };\n\n  if (autoClose && pauseOnHover) {\n    eventHandlers.onMouseEnter = pauseToast;\n    eventHandlers.onMouseLeave = playToast;\n  }\n\n  // prevent toast from closing when user drags the toast\n  if (closeOnClick) {\n    eventHandlers.onClick = (e: React.MouseEvent) => {\n      onClick && onClick(e);\n      drag.canCloseOnClick && closeToast();\n    };\n  }\n\n  return {\n    playToast,\n    pauseToast,\n    isRunning,\n    preventExitTransition,\n    toastRef,\n    eventHandlers\n  };\n}\n","import React from 'react';\nimport { Default } from '../utils';\nimport { Theme, TypeOptions } from '../types';\n\nexport interface CloseButtonProps {\n  closeToast: (e: React.MouseEvent<HTMLElement>) => void;\n  type: TypeOptions;\n  ariaLabel?: string;\n  theme: Theme;\n}\n\nexport function CloseButton({\n  closeToast,\n  theme,\n  ariaLabel = 'close'\n}: CloseButtonProps) {\n  return (\n    <button\n      className={`${Default.CSS_NAMESPACE}__close-button ${Default.CSS_NAMESPACE}__close-button--${theme}`}\n      type=\"button\"\n      onClick={e => {\n        e.stopPropagation();\n        closeToast(e);\n      }}\n      aria-label={ariaLabel}\n    >\n      <svg aria-hidden=\"true\" viewBox=\"0 0 14 16\">\n        <path\n          fillRule=\"evenodd\"\n          d=\"M7.71 8.23l3.75 3.75-1.48 1.48-3.75-3.75-3.75 3.75L1 11.98l3.75-3.75L1 4.48 2.48 3l3.75 3.75L9.98 3l1.48 1.48-3.75 3.75z\"\n        />\n      </svg>\n    </button>\n  );\n}\n","import React from 'react';\nimport cx from 'clsx';\n\nimport { TYPE, Default, isFn } from './../utils';\nimport { TypeOptions, ToastClassName, Theme } from '../types';\n\nexport interface ProgressBarProps {\n  /**\n   * The animation delay which determine when to close the toast\n   */\n  delay: number;\n\n  /**\n   * Whether or not the animation is running or paused\n   */\n  isRunning: boolean;\n\n  /**\n   * Func to close the current toast\n   */\n  closeToast: () => void;\n\n  /**\n   * Optional type : info, success ...\n   */\n  type: TypeOptions;\n\n  /**\n   * The theme that is currently used\n   */\n  theme: Theme;\n\n  /**\n   * Hide or not the progress bar\n   */\n  hide?: boolean;\n\n  /**\n   * Optionnal className\n   */\n  className?: ToastClassName;\n\n  /**\n   * Optionnal inline style\n   */\n  style?: React.CSSProperties;\n\n  /**\n   * Tell wether or not controlled progress bar is used\n   */\n  controlledProgress?: boolean;\n\n  /**\n   * Controlled progress value\n   */\n  progress?: number | string;\n\n  /**\n   * Support rtl content\n   */\n  rtl?: boolean;\n\n  /**\n   * Tell if the component is visible on screen or not\n   */\n  isIn?: boolean;\n}\n\nexport function ProgressBar({\n  delay,\n  isRunning,\n  closeToast,\n  type,\n  hide,\n  className,\n  style: userStyle,\n  controlledProgress,\n  progress,\n  rtl,\n  isIn,\n  theme\n}: ProgressBarProps) {\n  const style: React.CSSProperties = {\n    ...userStyle,\n    animationDuration: `${delay}ms`,\n    animationPlayState: isRunning ? 'running' : 'paused',\n    opacity: hide ? 0 : 1\n  };\n\n  if (controlledProgress) style.transform = `scaleX(${progress})`;\n  const defaultClassName = cx(\n    `${Default.CSS_NAMESPACE}__progress-bar`,\n    controlledProgress\n      ? `${Default.CSS_NAMESPACE}__progress-bar--controlled`\n      : `${Default.CSS_NAMESPACE}__progress-bar--animated`,\n    `${Default.CSS_NAMESPACE}__progress-bar-theme--${theme}`,\n    `${Default.CSS_NAMESPACE}__progress-bar--${type}`,\n    {\n      [`${Default.CSS_NAMESPACE}__progress-bar--rtl`]: rtl\n    }\n  );\n  const classNames = isFn(className)\n    ? className({\n        rtl,\n        type,\n        defaultClassName\n      })\n    : cx(defaultClassName, className);\n\n  // 🧐 controlledProgress is derived from progress\n  // so if controlledProgress is set\n  // it means that this is also the case for progress\n  const animationEvent = {\n    [controlledProgress && progress! >= 1\n      ? 'onTransitionEnd'\n      : 'onAnimationEnd']:\n      controlledProgress && progress! < 1\n        ? null\n        : () => {\n            isIn && closeToast();\n          }\n  };\n\n  // TODO: add aria-valuenow, aria-valuemax, aria-valuemin\n\n  return (\n    <div\n      role=\"progressbar\"\n      aria-hidden={hide ? 'true' : 'false'}\n      aria-label=\"notification timer\"\n      className={classNames}\n      style={style}\n      {...animationEvent}\n    />\n  );\n}\n\nProgressBar.defaultProps = {\n  type: TYPE.DEFAULT,\n  hide: false\n};\n","import React from 'react';\nimport cx from 'clsx';\n\nimport { ProgressBar } from './ProgressBar';\nimport { CloseButton } from './CloseButton';\nimport { ToastProps } from '../types';\nimport { Default, isFn } from '../utils';\nimport { useToast } from '../hooks/useToast';\n\nexport const Toast: React.FC<ToastProps> = props => {\n  const { isRunning, preventExitTransition, toastRef, eventHandlers } =\n    useToast(props);\n  const {\n    closeButton,\n    children,\n    autoClose,\n    onClick,\n    type,\n    hideProgressBar,\n    closeToast,\n    transition: Transition,\n    position,\n    className,\n    style,\n    bodyClassName,\n    bodyStyle,\n    progressClassName,\n    progressStyle,\n    updateId,\n    role,\n    progress,\n    rtl,\n    toastId,\n    deleteToast,\n    isIn,\n    isLoading,\n    iconOut,\n    theme\n  } = props;\n  const defaultClassName = cx(\n    `${Default.CSS_NAMESPACE}__toast`,\n    `${Default.CSS_NAMESPACE}__toast-theme--${theme}`,\n    `${Default.CSS_NAMESPACE}__toast--${type}`,\n    {\n      [`${Default.CSS_NAMESPACE}__toast--rtl`]: rtl\n    }\n  );\n  const cssClasses = isFn(className)\n    ? className({\n        rtl,\n        position,\n        type,\n        defaultClassName\n      })\n    : cx(defaultClassName, className);\n  const isProgressControlled = !!progress;\n\n  const closeButtonProps = { closeToast, type, theme };\n  let Close: React.ReactNode = null;\n\n  if (closeButton === false) {\n    // hide\n  } else if (isFn(closeButton)) {\n    Close = closeButton(closeButtonProps);\n  } else if (React.isValidElement(closeButton)) {\n    Close = React.cloneElement(closeButton, closeButtonProps);\n  } else {\n    Close = CloseButton(closeButtonProps);\n  }\n\n  return (\n    <Transition\n      isIn={isIn}\n      done={deleteToast}\n      position={position}\n      preventExitTransition={preventExitTransition}\n      nodeRef={toastRef}\n    >\n      <div\n        id={toastId as string}\n        onClick={onClick}\n        className={cssClasses}\n        {...eventHandlers}\n        style={style}\n        ref={toastRef}\n      >\n        <div\n          {...(isIn && { role: role })}\n          className={\n            isFn(bodyClassName)\n              ? bodyClassName({ type })\n              : cx(`${Default.CSS_NAMESPACE}__toast-body`, bodyClassName)\n          }\n          style={bodyStyle}\n        >\n          {iconOut != null && (\n            <div\n              className={cx(`${Default.CSS_NAMESPACE}__toast-icon`, {\n                [`${Default.CSS_NAMESPACE}--animate-icon ${Default.CSS_NAMESPACE}__zoom-enter`]:\n                  !isLoading\n              })}\n            >\n              {iconOut}\n            </div>\n          )}\n          <div>{children}</div>\n        </div>\n        {Close}\n        {(autoClose || isProgressControlled) && (\n          <ProgressBar\n            {...(updateId && !isProgressControlled\n              ? { key: `pb-${updateId}` }\n              : {})}\n            rtl={rtl}\n            theme={theme}\n            delay={autoClose as number}\n            isRunning={isRunning}\n            isIn={isIn}\n            closeToast={closeToast}\n            hide={hideProgressBar}\n            type={type}\n            style={progressStyle}\n            className={progressClassName}\n            controlledProgress={isProgressControlled}\n            progress={progress}\n          />\n        )}\n      </div>\n    </Transition>\n  );\n};\n","import { Default, cssTransition } from '../utils';\n\nconst Bounce = cssTransition({\n  enter: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__bounce-enter`,\n  exit: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__bounce-exit`,\n  appendPosition: true\n});\n\nconst Slide = cssTransition({\n  enter: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__slide-enter`,\n  exit: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__slide-exit`,\n  appendPosition: true\n});\n\nconst Zoom = cssTransition({\n  enter: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__zoom-enter`,\n  exit: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__zoom-exit`\n});\n\nconst Flip = cssTransition({\n  enter: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__flip-enter`,\n  exit: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__flip-exit`\n});\n\nexport { Bounce, Slide, Zoom, Flip };\n","// https://github.com/yannickcr/eslint-plugin-react/issues/3140\n/* eslint react/prop-types: \"off\" */\nimport React, { forwardRef, StyleHTMLAttributes, useEffect } from 'react';\nimport cx from 'clsx';\n\nimport { Toast } from './Toast';\nimport { CloseButton } from './CloseButton';\nimport { Bounce } from './Transitions';\nimport { POSITION, Direction, Default, parseClassName, isFn } from '../utils';\nimport { useToastContainer } from '../hooks/useToastContainer';\nimport { ToastContainerProps, ToastPosition } from '../types';\n\nexport const ToastContainer = forwardRef<HTMLDivElement, ToastContainerProps>(\n  (props, ref) => {\n    const { getToastToRender, containerRef, isToastActive } =\n      useToastContainer(props);\n    const { className, style, rtl, containerId } = props;\n\n    function getClassName(position: ToastPosition) {\n      const defaultClassName = cx(\n        `${Default.CSS_NAMESPACE}__toast-container`,\n        `${Default.CSS_NAMESPACE}__toast-container--${position}`,\n        { [`${Default.CSS_NAMESPACE}__toast-container--rtl`]: rtl }\n      );\n      return isFn(className)\n        ? className({\n            position,\n            rtl,\n            defaultClassName\n          })\n        : cx(defaultClassName, parseClassName(className));\n    }\n\n    useEffect(() => {\n      if (ref) {\n        (ref as React.MutableRefObject<HTMLDivElement>).current =\n          containerRef.current!;\n      }\n    }, []);\n\n    return (\n      <div\n        ref={containerRef}\n        className={Default.CSS_NAMESPACE as string}\n        id={containerId as string}\n      >\n        {getToastToRender((position, toastList) => {\n          const containerStyle: React.CSSProperties = !toastList.length\n            ? { ...style, pointerEvents: 'none' }\n            : { ...style };\n\n          return (\n            <div\n              className={getClassName(position)}\n              style={containerStyle}\n              key={`container-${position}`}\n            >\n              {toastList.map(({ content, props: toastProps }, i) => {\n                return (\n                  <Toast\n                    {...toastProps}\n                    isIn={isToastActive(toastProps.toastId)}\n                    style={\n                      {\n                        ...toastProps.style,\n                        '--nth': i + 1,\n                        '--len': toastList.length\n                      } as StyleHTMLAttributes<HTMLDivElement>\n                    }\n                    key={`toast-${toastProps.key}`}\n                  >\n                    {content}\n                  </Toast>\n                );\n              })}\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n);\n\nToastContainer.displayName = 'ToastContainer';\n\nToastContainer.defaultProps = {\n  position: POSITION.TOP_RIGHT as ToastPosition,\n  transition: Bounce,\n  rtl: false,\n  autoClose: 5000,\n  hideProgressBar: false,\n  closeButton: CloseButton,\n  pauseOnHover: true,\n  pauseOnFocusLoss: true,\n  closeOnClick: true,\n  newestOnTop: false,\n  draggable: true,\n  draggablePercent: Default.DRAGGABLE_PERCENT as number,\n  draggableDirection: Direction.X,\n  role: 'alert',\n  theme: 'light'\n};\n","import { POSITION, TYPE, isStr, isNum, isFn } from '../utils';\nimport { eventManager, OnChangeCallback, Event } from './eventManager';\nimport {\n  ToastContent,\n  ToastOptions,\n  ToastProps,\n  Id,\n  UpdateOptions,\n  ClearWaitingQueueParams,\n  NotValidatedToastProps,\n  TypeOptions\n} from '../types';\nimport { ContainerInstance } from '../hooks';\n\ninterface EnqueuedToast {\n  content: ToastContent;\n  options: NotValidatedToastProps;\n}\n\nlet containers = new Map<ContainerInstance | Id, ContainerInstance>();\nlet latestInstance: ContainerInstance | Id;\nlet queue: EnqueuedToast[] = [];\n\n/**\n * Get the toast by id, given it's in the DOM, otherwise returns null\n */\nfunction getToast(toastId: Id, { containerId }: ToastOptions) {\n  const container = containers.get(containerId || latestInstance);\n  if (!container) return null;\n\n  return container.getToast(toastId);\n}\n\n/**\n * Generate a random toastId\n */\nfunction generateToastId() {\n  return Math.random().toString(36).substring(2, 9);\n}\n\n/**\n * Generate a toastId or use the one provided\n */\nfunction getToastId(options?: ToastOptions) {\n  if (options && (isStr(options.toastId) || isNum(options.toastId))) {\n    return options.toastId;\n  }\n\n  return generateToastId();\n}\n\n/**\n * If the container is not mounted, the toast is enqueued and\n * the container lazy mounted\n */\nfunction dispatchToast(\n  content: ToastContent,\n  options: NotValidatedToastProps\n): Id {\n  if (containers.size > 0) {\n    eventManager.emit(Event.Show, content, options);\n  } else {\n    queue.push({ content, options });\n  }\n\n  return options.toastId;\n}\n\n/**\n * Merge provided options with the defaults settings and generate the toastId\n */\nfunction mergeOptions(type: string, options?: ToastOptions) {\n  return {\n    ...options,\n    type: (options && options.type) || type,\n    toastId: getToastId(options)\n  } as NotValidatedToastProps;\n}\n\nfunction createToastByType(type: string) {\n  return (content: ToastContent, options?: ToastOptions) =>\n    dispatchToast(content, mergeOptions(type, options));\n}\n\nfunction toast(content: ToastContent, options?: ToastOptions) {\n  return dispatchToast(content, mergeOptions(TYPE.DEFAULT, options));\n}\n\ntoast.loading = (content: ToastContent, options?: ToastOptions) =>\n  dispatchToast(\n    content,\n    mergeOptions(TYPE.DEFAULT, {\n      isLoading: true,\n      autoClose: false,\n      closeOnClick: false,\n      closeButton: false,\n      draggable: false,\n      ...options\n    })\n  );\n\nexport interface ToastPromiseParams<T = unknown> {\n  pending?: string | UpdateOptions<void>;\n  success?: string | UpdateOptions<T>;\n  error?: string | UpdateOptions<any>;\n}\n\nfunction handlePromise<T = unknown>(\n  promise: Promise<T> | (() => Promise<T>),\n  { pending, error, success }: ToastPromiseParams<T>,\n  options?: ToastOptions\n) {\n  let id: Id;\n\n  if (pending) {\n    id = isStr(pending)\n      ? toast.loading(pending, options)\n      : toast.loading(pending.render, {\n          ...options,\n          ...(pending as ToastOptions)\n        });\n  }\n\n  const resetParams = {\n    isLoading: null,\n    autoClose: null,\n    closeOnClick: null,\n    closeButton: null,\n    draggable: null,\n    delay: 100\n  };\n\n  const resolver = (\n    type: TypeOptions,\n    input: string | UpdateOptions<T> | undefined,\n    result: T\n  ) => {\n    // Remove the toast if the input has not been provided. This prevents the toast from hanging\n    // in the pending state if a success/error toast has not been provided.\n    if (input == null) {\n      toast.dismiss(id);\n      return;\n    }\n\n    const baseParams = {\n      type,\n      ...resetParams,\n      ...options,\n      data: result\n    };\n    const params = isStr(input) ? { render: input } : input;\n\n    // if the id is set we know that it's an update\n    if (id) {\n      toast.update(id, {\n        ...baseParams,\n        ...params\n      });\n    } else {\n      // using toast.promise without loading\n      toast(params.render, {\n        ...baseParams,\n        ...params\n      } as ToastOptions);\n    }\n\n    return result;\n  };\n\n  const p = isFn(promise) ? promise() : promise;\n\n  //call the resolvers only when needed\n  p.then(result => resolver('success', success, result)).catch(err =>\n    resolver('error', error, err)\n  );\n\n  return p;\n}\n\ntoast.promise = handlePromise;\ntoast.success = createToastByType(TYPE.SUCCESS);\ntoast.info = createToastByType(TYPE.INFO);\ntoast.error = createToastByType(TYPE.ERROR);\ntoast.warning = createToastByType(TYPE.WARNING);\ntoast.warn = toast.warning;\ntoast.dark = (content: ToastContent, options?: ToastOptions) =>\n  dispatchToast(\n    content,\n    mergeOptions(TYPE.DEFAULT, {\n      theme: 'dark',\n      ...options\n    })\n  );\n\n/**\n * Remove toast programmaticaly\n */\ntoast.dismiss = (id?: Id) => eventManager.emit(Event.Clear, id);\n\n/**\n * Clear waiting queue when limit is used\n */\ntoast.clearWaitingQueue = (params: ClearWaitingQueueParams = {}) =>\n  eventManager.emit(Event.ClearWaitingQueue, params);\n\n/**\n * return true if one container is displaying the toast\n */\ntoast.isActive = (id: Id) => {\n  let isToastActive = false;\n\n  containers.forEach(container => {\n    if (container.isToastActive && container.isToastActive(id)) {\n      isToastActive = true;\n    }\n  });\n\n  return isToastActive;\n};\n\ntoast.update = (toastId: Id, options: UpdateOptions = {}) => {\n  // if you call toast and toast.update directly nothing will be displayed\n  // this is why I defered the update\n  setTimeout(() => {\n    const toast = getToast(toastId, options as ToastOptions);\n    if (toast) {\n      const { props: oldOptions, content: oldContent } = toast;\n\n      const nextOptions = {\n        ...oldOptions,\n        ...options,\n        toastId: options.toastId || toastId,\n        updateId: generateToastId()\n      } as ToastProps & UpdateOptions;\n\n      if (nextOptions.toastId !== toastId) nextOptions.staleId = toastId;\n\n      const content = nextOptions.render || oldContent;\n      delete nextOptions.render;\n\n      dispatchToast(content, nextOptions);\n    }\n  }, 0);\n};\n\n/**\n * Used for controlled progress bar.\n */\ntoast.done = (id: Id) => {\n  toast.update(id, {\n    progress: 1\n  });\n};\n\n/**\n * Subscribe to change when a toast is added, removed and updated\n *\n * Usage:\n * ```\n * const unsubscribe = toast.onChange((payload) => {\n *   switch (payload.status) {\n *   case \"added\":\n *     // new toast added\n *     break;\n *   case \"updated\":\n *     // toast updated\n *     break;\n *   case \"removed\":\n *     // toast has been removed\n *     break;\n *   }\n * })\n * ```\n */\ntoast.onChange = (callback: OnChangeCallback) => {\n  eventManager.on(Event.Change, callback);\n  return () => {\n    eventManager.off(Event.Change, callback);\n  };\n};\n\ntoast.POSITION = POSITION;\ntoast.TYPE = TYPE;\n\n/**\n * Wait until the ToastContainer is mounted to dispatch the toast\n * and attach isActive method\n */\neventManager\n  .on(Event.DidMount, (containerInstance: ContainerInstance) => {\n    latestInstance = containerInstance.containerId || containerInstance;\n    containers.set(latestInstance, containerInstance);\n\n    queue.forEach(item => {\n      eventManager.emit(Event.Show, item.content, item.options);\n    });\n\n    queue = [];\n  })\n  .on(Event.WillUnmount, (containerInstance: ContainerInstance) => {\n    containers.delete(containerInstance.containerId || containerInstance);\n\n    if (containers.size === 0) {\n      eventManager\n        .off(Event.Show)\n        .off(Event.Clear)\n        .off(Event.ClearWaitingQueue);\n    }\n  });\n\nexport { toast };\n","function toVal(mix) {\n\tvar k, y, str='';\n\n\tif (typeof mix === 'string' || typeof mix === 'number') {\n\t\tstr += mix;\n\t} else if (typeof mix === 'object') {\n\t\tif (Array.isArray(mix)) {\n\t\t\tfor (k=0; k < mix.length; k++) {\n\t\t\t\tif (mix[k]) {\n\t\t\t\t\tif (y = toVal(mix[k])) {\n\t\t\t\t\t\tstr && (str += ' ');\n\t\t\t\t\t\tstr += y;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor (k in mix) {\n\t\t\t\tif (mix[k]) {\n\t\t\t\t\tstr && (str += ' ');\n\t\t\t\t\tstr += k;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn str;\n}\n\nmodule.exports = function () {\n\tvar i=0, tmp, x, str='';\n\twhile (i < arguments.length) {\n\t\tif (tmp = arguments[i++]) {\n\t\t\tif (x = toVal(tmp)) {\n\t\t\t\tstr && (str += ' ');\n\t\t\t\tstr += x\n\t\t\t}\n\t\t}\n\t}\n\treturn str;\n}\n"],"sourceRoot":""}