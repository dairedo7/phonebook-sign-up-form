{"version":3,"sources":["views/LoginView/LoginView.js","views/LoginView/LoginView.module.scss"],"names":["initialState","email","password","reducer","state","action","type","payload","LoginView","useReducer","setState","dispatch","useDispatch","isLoggedIn","useSelector","auth","autoClose","className","styles","form","onSubmit","e","preventDefault","signIn","toast","success","theme","error","autoComplete","label","autoFocus","form__field","name","value","pattern","title","placeholder","onChange","target","email__label","password__label","btn","module","exports"],"mappings":"+QAUMA,EAAe,CACnBC,MAAO,GACPC,SAAU,IAGZ,SAASC,EAAQC,EAAOC,GACtB,OAAQA,EAAOC,MACb,IAAK,QAGL,IAAK,WACH,OAAO,2BAAKF,GAAZ,kBAAoBC,EAAOC,KAAOD,EAAOE,UAE3C,QACE,OAAOH,GAIE,SAASI,IACtB,MAA0BC,qBAAWN,EAASH,GAA9C,mBAAOI,EAAP,KAAcM,EAAd,KACMC,EAAWC,cACTX,EAAoBG,EAApBH,MAAOC,EAAaE,EAAbF,SAETW,EAAaC,aAAY,SAAAV,GAAK,OAAIA,EAAMW,KAAKF,cAsBnD,OACE,qCACE,cAAC,IAAD,CAAgBG,UAAW,MAC3B,uBAAMC,UAAWC,IAAOC,KAAMC,SAtBb,SAAAC,GACnBA,EAAEC,iBAGFX,EAASY,YAAOnB,IACXS,EAQHW,IAAMC,QAAQ,kCAAmC,CAC/CC,MAAO,YARTF,IAAMG,MACJ,sEACA,CACED,MAAO,aAa2CE,aAAa,MAAnE,UACE,wBAAOX,UAAWC,IAAOW,MAAzB,UACE,uBACEC,WAAS,EACTb,UAAWC,IAAOa,YAClBzB,KAAK,OACL0B,KAAK,QACLJ,aAAa,KACbK,MAAOhC,EACPiC,QAAQ,sEACRC,MAAM,4CACNC,YAAY,IACZC,SAAU,SAAAhB,GAAC,OACTX,EAAS,CAAEJ,KAAMe,EAAEiB,OAAON,KAAMzB,QAASc,EAAEiB,OAAOL,WAGtD,sBAAMhB,UAAWC,IAAOqB,aAAxB,sBAGF,wBAAOtB,UAAWC,IAAOW,MAAzB,UACE,uBACEZ,UAAWC,IAAOa,YAClBzB,KAAK,WACL0B,KAAK,WACLJ,aAAa,KACbK,MAAO/B,EACPkC,YAAY,IACZC,SAAU,SAAAhB,GAAC,OACTX,EAAS,CAAEJ,KAAMe,EAAEiB,OAAON,KAAMzB,QAASc,EAAEiB,OAAOL,WAGtD,sBAAMhB,UAAWC,IAAOsB,gBAAxB,yBAGF,wBAAQlC,KAAK,SAASW,UAAWC,IAAOuB,IAAxC,2B,mBC3FRC,EAAOC,QAAU,CAAC,KAAO,wBAAwB,IAAM,uBAAuB,aAAe,gCAAgC,gBAAkB,mCAAmC,YAAc,+BAA+B,MAAQ","file":"static/js/7.7b6bbb52.chunk.js","sourcesContent":["import { useReducer } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { signIn } from '../../redux/auth/auth-operations';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport styles from './LoginView.module.scss';\n\nconst initialState = {\n  email: '',\n  password: '',\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'email':\n      return { ...state, [action.type]: action.payload };\n\n    case 'password':\n      return { ...state, [action.type]: action.payload };\n\n    default:\n      return state;\n  }\n}\n\nexport default function LoginView() {\n  const [state, setState] = useReducer(reducer, initialState);\n  const dispatch = useDispatch();\n  const { email, password } = state;\n\n  const isLoggedIn = useSelector(state => state.auth.isLoggedIn);\n\n  // console.log(state);\n  const handleSubmit = e => {\n    e.preventDefault();\n    // console.log(state);\n\n    dispatch(signIn(state));\n    if (!isLoggedIn) {\n      toast.error(\n        'Request failed with status code 400. Check your email and password!',\n        {\n          theme: 'colored',\n        }\n      );\n    } else {\n      toast.success('You have succesfully logged in!', {\n        theme: 'colored',\n      });\n    }\n  };\n\n  return (\n    <>\n      <ToastContainer autoClose={3000} />\n      <form className={styles.form} onSubmit={handleSubmit} autoComplete=\"off\">\n        <label className={styles.label}>\n          <input\n            autoFocus\n            className={styles.form__field}\n            type=\"text\"\n            name=\"email\"\n            autoComplete=\"on\"\n            value={email}\n            pattern=\"[a-zA-Z0-9!#$%&'*+\\/=?^_`{|}~.-]+@[a-zA-Z0-9-]+(\\.[a-zA-Z0-9-]+)*\"\n            title=\"Please check the entered data is correct.\"\n            placeholder=\" \"\n            onChange={e =>\n              setState({ type: e.target.name, payload: e.target.value })\n            }\n          />\n          <span className={styles.email__label}>Email</span>\n        </label>\n\n        <label className={styles.label}>\n          <input\n            className={styles.form__field}\n            type=\"password\"\n            name=\"password\"\n            autoComplete=\"on\"\n            value={password}\n            placeholder=\" \"\n            onChange={e =>\n              setState({ type: e.target.name, payload: e.target.value })\n            }\n          />\n          <span className={styles.password__label}>Password</span>\n        </label>\n\n        <button type=\"submit\" className={styles.btn}>\n          Login\n        </button>\n      </form>\n    </>\n  );\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"LoginView_form__3AyYP\",\"btn\":\"LoginView_btn__CfxAR\",\"email__label\":\"LoginView_email__label__r3vYi\",\"password__label\":\"LoginView_password__label__14Ngs\",\"form__field\":\"LoginView_form__field__1gc0k\",\"label\":\"LoginView_label__2qmnD\"};"],"sourceRoot":""}