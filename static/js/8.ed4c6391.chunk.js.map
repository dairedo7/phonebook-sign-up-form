{"version":3,"sources":["views/RegisterView/RegisterView.js","views/RegisterView/RegisterView.module.scss"],"names":["initialState","name","email","password","reducer","state","action","type","payload","RegisterView","useReducer","setState","dispatch","useDispatch","className","styles","form","onSubmit","e","preventDefault","console","log","register","autoComplete","label","autoFocus","form__field","value","pattern","title","placeholder","onChange","target","required","name__label","email__label","password__label","btn","module","exports"],"mappings":"gQAOMA,EAAe,CACnBC,KAAM,GACNC,MAAO,GACPC,SAAU,IAGZ,SAASC,EAAQC,EAAOC,GACtB,OAAQA,EAAOC,MACb,IAAK,OAGL,IAAK,QAGL,IAAK,WACH,OAAO,2BAAKF,GAAZ,kBAAoBC,EAAOC,KAAOD,EAAOE,UAE3C,QACE,OAAOH,GAIE,SAASI,IACtB,MAA0BC,qBAAWN,EAASJ,GAA9C,mBAAOK,EAAP,KAAcM,EAAd,KACMC,EAAWC,cAQjB,OACE,uBAAMC,UAAWC,IAAOC,KAAMC,SAPX,SAAAC,GACnBA,EAAEC,iBACFC,QAAQC,IAAIhB,GACZO,EAASU,YAASjB,KAIoCkB,aAAa,MAAnE,UACE,wBAAOT,UAAWC,IAAOS,MAAzB,UACE,uBACEC,WAAS,EACTX,UAAWC,IAAOW,YAClBnB,KAAK,OACLN,KAAK,OACL0B,MAAOtB,EAAMJ,KACb2B,QAAQ,yHACRC,MAAM,iDACNC,YAAY,IACZC,SAAU,SAAAb,GAAC,OACTP,EAAS,CAAEJ,KAAMW,EAAEc,OAAO/B,KAAMO,QAASU,EAAEc,OAAOL,SAEpDM,UAAQ,IAEV,sBAAMnB,UAAWC,IAAOmB,YAAxB,qBAGF,wBAAOpB,UAAWC,IAAOS,MAAzB,UACE,uBACEV,UAAWC,IAAOW,YAClBnB,KAAK,OACLN,KAAK,QACL0B,MAAOtB,EAAMH,MACb0B,QAAQ,sEACRC,MAAM,4CACNC,YAAY,IACZC,SAAU,SAAAb,GAAC,OACTP,EAAS,CAAEJ,KAAMW,EAAEc,OAAO/B,KAAMO,QAASU,EAAEc,OAAOL,SAEpDM,UAAQ,IAEV,sBAAMnB,UAAWC,IAAOoB,aAAxB,sBAGF,wBAAOrB,UAAWC,IAAOS,MAAzB,UACE,uBACED,aAAa,MACbT,UAAWC,IAAOW,YAClBnB,KAAK,WACLN,KAAK,WACL0B,MAAOtB,EAAMF,SACb2B,YAAY,IACZC,SAAU,SAAAb,GAAC,OACTP,EAAS,CAAEJ,KAAMW,EAAEc,OAAO/B,KAAMO,QAASU,EAAEc,OAAOL,WAGtD,sBAAMb,UAAWC,IAAOqB,gBAAxB,yBAGF,wBAAQtB,UAAWC,IAAOsB,IAAK9B,KAAK,SAApC,2B,mBC1FN+B,EAAOC,QAAU,CAAC,KAAO,2BAA2B,IAAM,0BAA0B,YAAc,kCAAkC,aAAe,mCAAmC,gBAAkB,sCAAsC,YAAc,kCAAkC,MAAQ","file":"static/js/8.ed4c6391.chunk.js","sourcesContent":["import { useReducer } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { register } from '../../redux/auth/auth-operations';\n\nimport styles from './RegisterView.module.scss';\n\nconst initialState = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'name':\n      return { ...state, [action.type]: action.payload };\n\n    case 'email':\n      return { ...state, [action.type]: action.payload };\n\n    case 'password':\n      return { ...state, [action.type]: action.payload };\n\n    default:\n      return state;\n  }\n}\n\nexport default function RegisterView() {\n  const [state, setState] = useReducer(reducer, initialState);\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(state);\n    dispatch(register(state));\n  };\n\n  return (\n    <form className={styles.form} onSubmit={handleSubmit} autoComplete=\"off\">\n      <label className={styles.label}>\n        <input\n          autoFocus\n          className={styles.form__field}\n          type=\"text\"\n          name=\"name\"\n          value={state.name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Please check if the data you entered is valid.\"\n          placeholder=\" \"\n          onChange={e =>\n            setState({ type: e.target.name, payload: e.target.value })\n          }\n          required\n        />\n        <span className={styles.name__label}>Name</span>\n      </label>\n\n      <label className={styles.label}>\n        <input\n          className={styles.form__field}\n          type=\"text\"\n          name=\"email\"\n          value={state.email}\n          pattern=\"[a-zA-Z0-9!#$%&'*+\\/=?^_`{|}~.-]+@[a-zA-Z0-9-]+(\\.[a-zA-Z0-9-]+)*\"\n          title=\"Please check the entered data is correct.\"\n          placeholder=\" \"\n          onChange={e =>\n            setState({ type: e.target.name, payload: e.target.value })\n          }\n          required\n        />\n        <span className={styles.email__label}>Email</span>\n      </label>\n\n      <label className={styles.label}>\n        <input\n          autoComplete=\"off\"\n          className={styles.form__field}\n          type=\"password\"\n          name=\"password\"\n          value={state.password}\n          placeholder=\" \"\n          onChange={e =>\n            setState({ type: e.target.name, payload: e.target.value })\n          }\n        />\n        <span className={styles.password__label}>Password</span>\n      </label>\n\n      <button className={styles.btn} type=\"submit\">\n        Register\n      </button>\n    </form>\n  );\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"RegisterView_form__2GuCV\",\"btn\":\"RegisterView_btn__2-D-C\",\"name__label\":\"RegisterView_name__label__3POQX\",\"email__label\":\"RegisterView_email__label__3lPoq\",\"password__label\":\"RegisterView_password__label__3dLJT\",\"form__field\":\"RegisterView_form__field__1CJvi\",\"label\":\"RegisterView_label__YF5B_\"};"],"sourceRoot":""}